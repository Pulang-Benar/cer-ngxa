{"version":3,"file":"xaphira-ngxa-extra.js","sources":["ng://@xaphira/ngxa-extra/lib/password/change-password-page.component.ts","ng://@xaphira/ngxa-extra/lib/ngxa-extra.component.ts","ng://@xaphira/ngxa-extra/lib/profile/profile-page.component.ts","ng://@xaphira/ngxa-extra/lib/settings/settings-page.component.ts","ng://@xaphira/ngxa-extra/lib/security/prompt/deactivated-prompt.component.ts","ng://@xaphira/ngxa-extra/lib/security/security-page.component.ts","ng://@xaphira/ngxa-extra/lib/ngxa-extra-routing.module.ts","ng://@xaphira/ngxa-extra/lib/home/home-page.component.ts","ng://@xaphira/ngxa-extra/lib/ngxa-extra.module.ts"],"sourcesContent":["import { Component, Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { ApiBaseResponse } from '@xaphira/shared';\nimport { Pattern, EncryptionService } from '@xaphira/utils';\nimport { BaseFormComponent } from '@xaphira/ngxa-common';\nimport { ResponseCode, OAUTH_INFO, SecurityResourceModel } from '@xaphira/shared';\n\n@Component({\n  selector: 'xa-change-password-page',\n  styleUrls: ['./change-password-page.component.scss'],\n  templateUrl: './change-password-page.component.html',\n})\nexport class ChangePasswordPageComponent extends BaseFormComponent<any> {\n\n  passwordPattern: string = Pattern.PASSWORD_MEDIUM;\n  private enc: EncryptionService;\n  private oauthResource: SecurityResourceModel;\n\n  constructor(public injector: Injector) {\n    super(injector, {\n      'password': [],\n      'newPassword': [],\n      'confirmPassword': [],\n    });\n    this.enc = injector.get(EncryptionService);\n    this.oauthResource = injector.get(OAUTH_INFO);\n  }\n\n  onSubmit(): void {\n    const data: any = {\n      password: this.enc.encryptAES(this.oauthResource['aes_key'], this.formGroup.get('password').value),\n      newPassword: this.enc.encryptAES(this.oauthResource['aes_key'], this.formGroup.get('newPassword').value),\n      confirmPassword: this.enc.encryptAES(this.oauthResource['aes_key'], this.formGroup.get('confirmPassword').value),\n    };\n    (super.onSubmit(data, 'security', 'change-password') as Observable<ApiBaseResponse>)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((response: ApiBaseResponse) => {\n              if (response) {\n                switch (response.respStatusCode) {\n                  case ResponseCode.ERR_SCR0002.toString():\n                    this.formGroup.controls['password'].setErrors({\n                      'incorrect': true,\n                    });\n                    break;\n                  case ResponseCode.ERR_SCR0006.toString():\n                    this.formGroup.controls['newPassword'].setErrors({\n                      'equal': true,\n                    });\n                    break;\n                  default:\n                    break;\n                }\n              }\n            });\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'xa-extra',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class ExtraComponent {\n}\n","import { Component, OnInit, Injector, OnDestroy, Inject } from '@angular/core';\nimport { Validators, FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { ApiBaseResponse, HttpBaseModel, IndexedDBFactoryService, PROFILE_INDEXED_DB } from '@xaphira/shared';\nimport {\n  ResponseCode,\n  USER_INFO,\n  UserInfo,\n} from '@xaphira/shared';\nimport { Pattern } from '@xaphira/utils';\nimport { BaseFormComponent, SelectParamModel } from '@xaphira/ngxa-common';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'xa-profile-page',\n  styleUrls: ['./profile-page.component.scss'],\n  templateUrl: './profile-page.component.html',\n})\nexport class ProfilePageComponent extends BaseFormComponent<any> implements OnInit, OnDestroy {\n\n  public image: string;\n  public formGroupImage: FormGroup;\n  public uploadFinished: boolean;\n  public patternEmail: string = Pattern.EMAIL;\n  public patternPhoneNumber: string = Pattern.PHONE_NUMBER;\n  public minLength: number = 5;\n  public disabledUpload: boolean = false;\n\n  public apiSelectCountry: HttpBaseModel;\n\n  public apiSelectProvince: HttpBaseModel;\n  public paramSelectProvince: SelectParamModel[];\n\n  public apiSelectCity: HttpBaseModel;\n  public paramSelectCity: SelectParamModel[];\n\n  public apiSelectDistrict: HttpBaseModel;\n  public paramSelectDistrict: SelectParamModel[];\n\n  public apiSelectSubDistrict: HttpBaseModel;\n  public paramSelectSubDistrict: SelectParamModel[];\n\n  constructor(\n    public injector: Injector,\n    @Inject(USER_INFO) private userService: UserInfo,\n    @Inject(PROFILE_INDEXED_DB) private profileIndexedDB: IndexedDBFactoryService) {\n    super(injector,\n      {\n        'name': [],\n        'email': [],\n        'phoneNumber': [],\n        'address': [null, [Validators.minLength(5)]],\n        'country': [],\n        'province': [],\n        'city': [],\n        'district': [],\n        'subDistrict': [],\n      });\n    this.formGroupImage = this.formBuilder.group({\n      'image': [],\n    });\n    this.apiSelectCountry = this.api['master']['select-country'];\n    this.apiSelectProvince = this.api['master']['select-province'];\n    this.apiSelectCity = this.api['master']['select-city'];\n    this.apiSelectDistrict = this.api['master']['select-district'];\n    this.apiSelectSubDistrict = this.api['master']['select-subdistrict'];\n  }\n\n  ngOnInit(): void {\n    this.onInit('profile', 'get-profile');\n    this.profileIndexedDB.get('image-b64').then((value: any) => {\n      this.image = value;\n    });\n    this.paramSelectProvince = [{\n      key: 'country',\n      value: 'undefined',\n    }];\n    this.paramSelectCity = [{\n      key: 'province',\n      value: 'undefined',\n    }];\n    this.paramSelectDistrict = [{\n      key: 'city',\n      value: 'undefined',\n    }];\n    this.paramSelectSubDistrict = [{\n      key: 'district',\n      value: 'undefined',\n    }];\n  }\n\n  ngOnDestroy(): void {}\n\n  onInit(serviceName: string, apiName: string): void {\n    this.loadingForm = true;\n    this.exec(serviceName, apiName)\n      .subscribe(\n        (success: any) => {\n          this.loadingForm = false;\n          this.formGroup.controls['name'].setValue(success['name']);\n          this.formGroup.controls['email'].setValue(success['email']);\n          success['address'] ? this.formGroup.controls['address'].setValue(success['address']) : null;\n          success['province'] ? this.formGroup.controls['province'].setValue(success['province']) : null;\n          success['city'] ? this.formGroup.controls['city'].setValue(success['city']) : null;\n          success['district'] ? this.formGroup.controls['district'].setValue(success['district']) : null;\n          success['subDistrict'] ? this.formGroup.controls['subDistrict'].setValue(success['subDistrict']) : null;\n          success['phoneNumber'] ? this.formGroup.controls['phoneNumber'].setValue(success['phoneNumber']) : null;\n          success['mobileNumber'] ? this.formGroup.controls['mobileNumber'].setValue(success['mobileNumber']) : null;\n          this.formGroup.markAsPristine();\n        },\n        (error: HttpErrorResponse) => {\n          this.loadingForm = true;\n          const err: ApiBaseResponse = error['error'];\n          if (err) {\n            this.toastr.showI18n(err.respStatusMessage[err.respStatusCode], true, null, 'danger');\n          } else {\n            this.toastr.showI18n(err as any, true, null, 'danger');\n          }\n        },\n      );\n  }\n\n  onSelectCountry(select: any): void {\n    this.paramSelectProvince = [\n      {\n        key: 'country',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearProvince();\n  }\n  onSelectProvince(select: any): void {\n    this.paramSelectCity = [\n      {\n        key: 'province',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearProvince();\n  }\n  onSelectCity(select: any): void {\n    this.paramSelectDistrict = [\n      {\n        key: 'city',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearCity();\n  }\n  onSelectDistrict(select: any): void {\n    this.paramSelectSubDistrict = [\n      {\n        key: 'district',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearDistrict();\n  }\n\n  onClearCountry(): void {\n    this.formGroup.patchValue({\n      'province': [],\n      'city': [],\n      'district': [],\n      'subDistrict': [],\n    });\n  }\n  onClearProvince(): void {\n    this.formGroup.patchValue({\n      'city': [],\n      'district': [],\n      'subDistrict': [],\n    });\n  }\n  onClearCity(): void {\n    this.formGroup.patchValue({\n      'district': [],\n      'subDistrict': [],\n    });\n  }\n  onClearDistrict(): void {\n    this.formGroup.get('subDistrict').patchValue([]);\n  }\n\n  uploadImage(file: any) {\n    const data: FormData = new FormData();\n    data.append('photo', file);\n    this.formGroupImage.get('image').disable();\n    this.exec('file', 'photo-profile', data).subscribe(\n        (success: ApiBaseResponse) => {\n          this.userService.updatePhotoUser(file, success.respStatusMessage['checksum']);\n          this.uploadFinished = true;\n          this.formGroupImage.markAsPristine();\n          this.toastr.showI18n(success.respStatusMessage[success.respStatusCode], true, null, 'success');\n        },\n        (error: ApiBaseResponse) => {\n          this.formGroupImage.get('image').enable();\n          this.toastr.showI18n(error.respStatusMessage[error.respStatusCode], true, null, 'danger');\n        },\n    );\n  }\n\n  valueSelect(prop: string): string {\n    if (this.formGroup.get(prop).value) {\n      if (this.formGroup.get(prop).value.label) {\n        return this.formGroup.get(prop).value.label;\n      } else {\n        return this.formGroup.get(prop).value;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  onSubmit() {\n    const data: any = {\n      name: this.formGroup.get('name').value,\n      email: this.formGroup.get('email').value,\n      phoneNumber: this.formGroup.get('phoneNumber').value,\n      address: this.formGroup.get('address').value,\n      country: this.valueSelect('country'),\n      province: this.valueSelect('province'),\n      city: this.valueSelect('city'),\n      district: this.valueSelect('district'),\n      subDistrict: this.valueSelect('subDistrict'),\n    };\n    (super.onSubmit(data, 'profile', 'change-profile') as Observable<ApiBaseResponse>)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((response: ApiBaseResponse) => {\n              if (response) {\n                switch (response.respStatusCode) {\n                  case ResponseCode.ERR_SCR0008.toString():\n                    this.formGroup.controls['email'].setErrors({\n                      'email': true,\n                    });\n                    break;\n                  case ResponseCode.ERR_SCR0007A.toString():\n                    this.formGroup.controls['phoneNumber'].setErrors({\n                      'error.pattern.phoneNumber': true,\n                    });\n                    break;\n                  default:\n                    break;\n                }\n              }\n            });\n  }\n\n}\n","import { Component, OnInit, OnDestroy, Injector, Inject } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CheckboxModel, BaseFormComponent } from '@xaphira/ngxa-common';\nimport {\n  HttpBaseModel,\n  ApiBaseResponse,\n  IndexedDBFactoryService,\n  IndexedDBEncFactoryService,\n  AUTH_INDEXED_DB,\n  SETTINGS_INDEXED_DB,\n} from '@xaphira/shared';\nimport { ResponseCode } from '@xaphira/shared';\n\n@Component({\n  selector: 'xa-settings-page',\n  styleUrls: ['./settings-page.component.scss'],\n  templateUrl: './settings-page.component.html',\n})\nexport class SettingsPageComponent extends BaseFormComponent<any> implements OnInit, OnDestroy {\n\n  public apiSelectLocale: HttpBaseModel;\n  public localeIcon: string;\n  private localeCode: any;\n  private localeIdentifier: any;\n  dataTheme: CheckboxModel[] = [\n    {\n      selected: false,\n    },\n  ];\n\n  constructor(\n    public injector: Injector,\n    private translate: TranslateService,\n    private themeService: NbThemeService,\n    @Inject(SETTINGS_INDEXED_DB) private settingsIndexedDB: IndexedDBFactoryService,\n    @Inject(AUTH_INDEXED_DB) private authIndexedDB: IndexedDBEncFactoryService) {\n      super(injector, {\n        'locale': [],\n        'theme': [],\n      });\n      this.apiSelectLocale = this.api['master']['select-all-locale'];\n    }\n\n  ngOnInit(): void {\n    this.onInit('security', 'get-settings');\n  }\n\n  ngOnDestroy(): void {}\n\n  onInit(serviceName: string, apiName: string): void {\n    this.loadingForm = true;\n    this.exec(serviceName, apiName)\n      .subscribe(\n        (success: any) => {\n          this.loadingForm = false;\n          this.localeCode = success['localeCode'];\n          this.localeIdentifier = success['localeIdentifier'];\n          this.localeIcon = success['localeIcon'] ? success['localeIcon'] : '';\n          this.formGroup.controls['locale'].setValue(this.localeIdentifier);\n          let darkMode: CheckboxModel[] = [{\n            selected: false,\n          }];\n          if (success['theme'] === 'dark') {\n            darkMode = [{\n              selected: true,\n            }];\n          }\n          this.formGroup.controls['theme'].setValue(darkMode);\n          this.formGroup.markAsPristine();\n        },\n        (error: ApiBaseResponse) => {\n          this.loadingForm = true;\n          if (error.respStatusMessage)\n            this.toastr.showI18n(error.respStatusMessage[error.respStatusCode], true, null, 'danger');\n        },\n      );\n  }\n\n  onSubmit() {\n    if (this.formGroup.get('locale').value['value']) {\n      this.localeCode = this.formGroup.get('locale').value['value'];\n      this.localeIdentifier = this.formGroup.get('locale').value['label'];\n      this.localeIcon = this.formGroup.get('locale').value['icon'];\n    }\n    const theme: CheckboxModel[] = this.formGroup.get('theme').value;\n    const data: any = {\n      'localeCode': this.localeCode,\n      'localeIdentifier': this.localeIdentifier,\n      'localeIcon': this.localeIcon,\n      'theme': theme[0].selected ? 'dark' : 'default',\n    };\n    this.disabled = true;\n    Promise.all([\n      this.settingsIndexedDB.get('locale'),\n      this.settingsIndexedDB.get('theme'),\n    ]).then((current: any[]) => {\n      if ((current[0] !== this.localeCode) || (current[1] !== data['theme'])) {\n        this.exec('security', 'change-settings', data).subscribe(\n          (success: ApiBaseResponse) => {\n            if (success) {\n              if (success.respStatusCode === ResponseCode.OK_SCR002.toString()) {\n                if (theme) {\n                  this.changeTheme(theme[0].selected);\n                }\n                if (current[0] !== this.localeCode) {\n                  this.settingsIndexedDB.put('locale', this.localeCode).then(() => {\n                    this.http.HTTP_AUTH(this.api['security']['get-menus']).subscribe(\n                      (menus: any) => {\n                        Promise.all([\n                          this.authIndexedDB.putEnc('menus', JSON.stringify(menus['main'])),\n                          this.authIndexedDB.putEnc('extras', JSON.stringify(menus['extra'])),\n                        ]).then(() => {\n                          this.translate.getTranslation(this.localeCode).subscribe((lang: any) => {\n                            this.translate.use(this.localeCode);\n                            this.translate.setTranslation(this.localeCode, lang, true);\n                            this.toastr.showI18n(success.respStatusMessage[success.respStatusCode], true);\n                            this.disabled = false;\n                            this.formGroup.markAsPristine();\n                          });\n                        });\n                      },\n                      (error: any) => {\n                        this.toastr.showI18n('error.translate', false, null, 'warning');\n                      });\n                  });\n                }\n              }\n            }\n          },\n          (error: ApiBaseResponse) => {\n              this.disabled = false;\n              this.toastr.showI18n(error.respStatusMessage[error.respStatusCode], true, null, 'danger');\n          },\n        );\n      }\n    });\n  }\n\n  changeTheme(dark: boolean) {\n    const theme: string = dark ? 'dark' : 'default';\n    this.settingsIndexedDB.put('theme', theme).then();\n    this.themeService.changeTheme(theme);\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\n\n@Component({\n  selector: 'xa-deactivated-prompt',\n  templateUrl: 'deactivated-prompt.component.html',\n  styleUrls: ['deactivated-prompt.component.scss'],\n})\nexport class DeactivatedPromptComponent {\n\n  public disabled: boolean = false;\n  public password: string;\n\n  constructor(protected ref: NbDialogRef<DeactivatedPromptComponent>) {\n  }\n\n  submit(password) {\n    this.disabled = true;\n    this.ref.close(password);\n  }\n}\n","import { Component, Injector } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { NbDialogService } from '@nebular/theme';\nimport { ApiBaseResponse } from '@xaphira/shared';\nimport { ResponseCode, OAUTH_INFO, SecurityResourceModel } from '@xaphira/shared';\nimport { AuthTokenService } from '@xaphira/ngxa-auth';\nimport { BaseFormComponent } from '@xaphira/ngxa-common';\nimport { DeactivatedPromptComponent } from './prompt/deactivated-prompt.component';\nimport { Observable } from 'rxjs';\nimport { EncryptionService } from '@xaphira/utils';\n\n@Component({\n  selector: 'xa-security-page',\n  styleUrls: ['./security-page.component.scss'],\n  templateUrl: './security-page.component.html',\n})\nexport class SecurityPageComponent extends BaseFormComponent<any> {\n\n  private enc: EncryptionService;\n  private oauthResource: SecurityResourceModel;\n  private authToken: AuthTokenService;\n\n  constructor(public injector: Injector,\n    private dialogService: NbDialogService) {\n    super(injector, {\n      'password': [],\n    });\n    this.enc = injector.get(EncryptionService);\n    this.oauthResource = injector.get(OAUTH_INFO);\n    this.authToken = injector.get(AuthTokenService);\n  }\n\n  onSubmit(): void {\n    this.disabled = true;\n    this.dialogService.open(DeactivatedPromptComponent)\n      .onClose.subscribe((password: string) => {\n        if (password) {\n          this.disabled = true;\n          const data: any = {\n            password: this.enc.encryptAES(this.oauthResource['aes_key'], password),\n          };\n          (super.onSubmit(data, 'security', 'deactivated') as Observable<ApiBaseResponse>)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((response: ApiBaseResponse) => {\n              if (response) {\n                if (response.respStatusCode === ResponseCode.OK_SCR003.toString()) {\n                  this.authToken.logout();\n                }\n              }\n            });\n        } else {\n          this.disabled = false;\n        }\n      });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuardChildService } from '@xaphira/ngxa-auth';\nimport { ExtraComponent } from './ngxa-extra.component';\nimport { ProfilePageComponent } from './profile/profile-page.component';\nimport { SettingsPageComponent } from './settings/settings-page.component';\nimport { SecurityPageComponent } from './security/security-page.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: ExtraComponent,\n  canActivateChild: [AuthGuardChildService],\n  children: [\n    {\n      path: 'profile',\n      component: ProfilePageComponent,\n      data: {\n        code: '#PROFILE-PAGE',\n      },\n    },\n    {\n      path: 'security',\n      component: SecurityPageComponent,\n      data: {\n        code: '#SECURITY-PAGE',\n      },\n    },\n    {\n      path: 'settings',\n      component: SettingsPageComponent,\n      data: {\n        code: '#SETTINGS-PAGE',\n      },\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NgxaExtraRoutingModule {\n}\n","import { Component, OnInit, OnDestroy, Inject } from '@angular/core';\nimport { PROFILE_INDEXED_DB, IndexedDBFactoryService } from '@xaphira/shared';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'xa-home-page',\n  styleUrls: ['./home-page.component.scss'],\n  templateUrl: './home-page.component.html',\n})\nexport class HomePageComponent implements OnInit, OnDestroy {\n\n  public name: Promise<string>;\n\n  constructor(@Inject(PROFILE_INDEXED_DB) private profileIndexedDB: IndexedDBFactoryService) {}\n\n  ngOnInit(): void {\n    this.name = this.profileIndexedDB.get('name');\n  }\n\n  ngOnDestroy(): void {}\n\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NbCardModule, NbDialogModule, NbAlertModule, NbIconModule } from '@nebular/theme';\nimport { NgxaThemeModule } from '@xaphira/ngxa-theme';\nimport {\n  NgxaInputModule,\n  NgxaButtonModule,\n  NgxaBaseModule,\n  NgxaCheckBoxModule,\n  NgxaEditorModule,\n  NgxaSelectModule,\n} from '@xaphira/ngxa-common';\nimport { ChangePasswordPageComponent } from './password/change-password-page.component';\nimport { ExtraComponent } from './ngxa-extra.component';\nimport { NgxaExtraRoutingModule } from './ngxa-extra-routing.module';\nimport { ProfilePageComponent } from './profile/profile-page.component';\nimport { SettingsPageComponent } from './settings/settings-page.component';\nimport { SecurityPageComponent } from './security/security-page.component';\nimport { DeactivatedPromptComponent } from './security/prompt/deactivated-prompt.component';\nimport { NgxaImageModule } from '@xaphira/ngxa-common';\nimport { HomePageComponent } from './home/home-page.component';\n\nconst components = [\n  ExtraComponent,\n  ChangePasswordPageComponent,\n  DeactivatedPromptComponent,\n  SecurityPageComponent,\n  ProfilePageComponent,\n  SettingsPageComponent,\n  HomePageComponent,\n];\n\nconst entry_components = [\n  DeactivatedPromptComponent,\n];\n\nconst modules = [\n  FormsModule,\n  ReactiveFormsModule,\n  NbCardModule,\n  NbAlertModule,\n  NbIconModule,\n  NbDialogModule.forChild(),\n  NgxaThemeModule,\n  NgxaInputModule,\n  NgxaCheckBoxModule,\n  NgxaButtonModule,\n  NgxaBaseModule,\n  NgxaEditorModule,\n  NgxaSelectModule,\n  NgxaImageModule,\n  NgxaExtraRoutingModule,\n];\n\n@NgModule({\n  imports: [\n    ...modules,\n  ],\n  declarations: [\n    ...components,\n  ],\n  entryComponents: [\n    ...entry_components,\n  ],\n})\nexport class NgxaExtraModule { }\n"],"names":["tslib_1.__extends"],"mappings":"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"}