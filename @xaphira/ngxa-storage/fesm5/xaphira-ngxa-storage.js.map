{"version":3,"file":"xaphira-ngxa-storage.js","sources":["ng://@xaphira/ngxa-storage/lib/services/storage-mask.service.ts","ng://@xaphira/ngxa-storage/lib/providers/storage.provider.ts","ng://@xaphira/ngxa-storage/lib/ngxa-storage.module.ts","ng://@xaphira/ngxa-storage/lib/services/indexed-db.service.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { EncryptionService } from '@xaphira/utils';\nimport { SecurityResourceModel, OAUTH_INFO } from '@xaphira/shared';\nimport { StorageFactoryService } from './storage-factory.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StorageMaskService implements StorageFactoryService {\n\n    constructor(protected enc: EncryptionService,\n        @Inject(OAUTH_INFO) private oauthResource: SecurityResourceModel) {}\n\n    public getSessionStorageEnc(key: string): string {\n        const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n        if (sessionStorage.getItem(keyEncrypted))\n            return this.enc.decryptAES(this.oauthResource['aes_key'], sessionStorage.getItem(keyEncrypted));\n        else\n            return null;\n    }\n\n    public setSessionStorageEnc(key: string, value: string): void {\n        const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n        const valueEncrypted = this.enc.encryptAES(this.oauthResource['aes_key'], value);\n        sessionStorage.setItem(keyEncrypted, valueEncrypted);\n    }\n\n    public removeSessionStorageEnc(key: string): void {\n        const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n        sessionStorage.removeItem(keyEncrypted);\n    }\n\n    public getLocalStorageEnc(key: string): string {\n        const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n        if (localStorage.getItem(keyEncrypted))\n            return this.enc.decryptAES(this.oauthResource['aes_key'], localStorage.getItem(keyEncrypted));\n        else\n            return null;\n    }\n\n    public setLocalStorageEnc(key: string, value: string): void {\n        const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n        const valueEncrypted = this.enc.encryptAES(this.oauthResource['aes_key'], value);\n        localStorage.setItem(keyEncrypted, valueEncrypted);\n    }\n\n    public removeLocalStorageEnc(key: string): void {\n        const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n        localStorage.removeItem(keyEncrypted);\n    }\n\n    public getSessionStorage(key: string): string {\n        return (key) ? sessionStorage.getItem(key) : null;\n    }\n\n    public setSessionStorage(key: string, value: string): void {\n        sessionStorage.setItem(key, value);\n    }\n\n    public removeSessionStorage(key: string): void {\n        sessionStorage.removeItem(key);\n    }\n\n    public getLocalStorage(key: string): string {\n        return (key) ? localStorage.getItem(key) : null;\n    }\n\n    public setLocalStorage(key: string, value: string): void {\n        localStorage.setItem(key, value);\n    }\n\n    public removeLocalStorage(key: string): void {\n        localStorage.removeItem(key);\n    }\n\n    public clearSessionStorage(): void {\n        sessionStorage.clear();\n    }\n\n    public clearLocalStorage(): void {\n        localStorage.clear();\n    }\n\n    public clearAll(): void {\n        sessionStorage.clear();\n        localStorage.clear();\n    }\n\n}\n","import { InjectionToken } from '@angular/core';\nimport { StorageFactoryService } from '../services/storage-factory.service';\n\nexport const STORAGE_SERVICE: InjectionToken<StorageFactoryService> =\nnew InjectionToken<StorageFactoryService>('Storage Factory Service');\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StorageMaskService } from './services/storage-mask.service';\nimport { STORAGE_SERVICE } from './providers/storage.provider';\n\nexport const STORAGE_PROVIDERS = [\n  { provide: STORAGE_SERVICE, useClass: StorageMaskService},\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  exports: [],\n  declarations: [],\n})\nexport class NgxaStorageModule {\n\n  static forRoot(): ModuleWithProviders {\n    return <ModuleWithProviders>{\n      ngModule: NgxaStorageModule,\n      providers: [\n        ...STORAGE_PROVIDERS,\n      ],\n    };\n  }\n}\n","import { Injector } from '@angular/core';\nimport { IDBPDatabase, StoreValue, StoreKey } from 'idb';\nimport * as idb from 'idb';\nimport { EncryptionService } from '@xaphira/utils';\nimport { OAUTH_INFO, SecurityResourceModel } from '@xaphira/shared';\nimport { Observable, Subject } from 'rxjs';\n\nexport class IndexedDBService<T> {\n  protected $dbPromise: Promise<IDBPDatabase<T>>;\n  protected enc: EncryptionService;\n  protected oauthResource: SecurityResourceModel;\n\n  constructor(injector: Injector, dbname: string, version: number, private storeName: any) {\n    this.openSessionIDB(dbname, version);\n    this.enc = injector.get(EncryptionService);\n    this.oauthResource = injector.get(OAUTH_INFO);\n  }\n\n  public async openSessionIDB(dbname: string, version: number): Promise<IDBPDatabase<T>> {\n    return this.$dbPromise = idb.openDB<T>(dbname, version);\n  }\n\n  public getAllOf(): Observable<any> {\n    const result$: Subject<any> = new Subject<any>();\n    this.getAllVal(this.storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n  public getOf(key): Observable<any> {\n    const result$: Subject<any> = new Subject<any>();\n    this.getKeyVal(key, this.storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n  public putOf(key, val): Observable<any> {\n    const result$: Subject<any> = new Subject<any>();\n    this.putKeyVal(key, val, this.storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n  public removeOf(key): Observable<void> {\n    const result$: Subject<any> = new Subject<any>();\n    this.removeKeyVal(key, this.storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n\n  public getAll(): Promise<StoreValue<T, any>[]> {\n    return this.getAllVal(this.storeName);\n  }\n  public get(key): Promise<StoreValue<T, any>> {\n    return this.getKeyVal(this.storeName, key);\n  }\n  public put(key, val): Promise<StoreKey<T, any>> {\n    return this.putKeyVal(this.storeName, key, val);\n  }\n  public remove(key): Promise<void> {\n    return this.removeKeyVal(this.storeName, key);\n  }\n  public clearAll(): Promise<void> {\n    return this.clearAllKeyVal(this.storeName);\n  }\n  public keys(): Promise<StoreKey<T, any>[]> {\n    return this.keysKeyVal(this.storeName);\n  }\n\n  public async getAllVal(storeName: any): Promise<StoreValue<T, any>[]> {\n    return (await this.$dbPromise).getAll(storeName);\n  }\n  public async getKeyVal(storeName: any, key): Promise<StoreValue<T, any>> {\n    return (await this.$dbPromise).get(storeName, key);\n  }\n  public async putKeyVal(storeName: any, key, val): Promise<StoreKey<T, any>> {\n    return (await this.$dbPromise).put(storeName, val, key);\n  }\n  public async removeKeyVal(storeName: any, key): Promise<void> {\n    return (await this.$dbPromise).delete(storeName, key);\n  }\n  public async clearAllKeyVal(storeName: any): Promise<void> {\n    return (await this.$dbPromise).clear(storeName);\n  }\n  public async keysKeyVal(storeName: any): Promise<StoreKey<T, any>[]> {\n    return (await this.$dbPromise).getAllKeys(storeName);\n  }\n\n  public async addArticle(storeName: any, value: any): Promise<StoreKey<T, any>> {\n      return (await this.$dbPromise).add(storeName, value);\n  }\n  public async addAllArticle(storeName: any, values: any[]): Promise<void> {\n      const tx = (await this.$dbPromise).transaction(storeName, 'readwrite');\n      values.forEach((value: any) => {\n          tx.store.add(value);\n      });\n      return await tx.done;\n  }\n}\n"],"names":["idb.openDB"],"mappings":"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"}