{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@xaphira/ngxa-auth/lib/storage/auth-indexeddb.service.ts","ng://@xaphira/ngxa-auth/lib/storage/profile-indexeddb.service.ts","ng://@xaphira/ngxa-auth/lib/storage/settings-indexeddb.service.ts","ng://@xaphira/ngxa-auth/lib/services/auth-token.service.ts","ng://@xaphira/ngxa-auth/lib/services/auth-guard.service.ts","ng://@xaphira/ngxa-auth/lib/services/unauth-guard.service.ts","ng://@xaphira/ngxa-auth/lib/services/auth-guard-child.service.ts","ng://@xaphira/ngxa-auth/lib/auth/login/login-page.component.ts","ng://@xaphira/ngxa-auth/lib/auth/logout/logout.component.ts","ng://@xaphira/ngxa-auth/lib/layout/auth.component.ts","ng://@xaphira/ngxa-auth/lib/auth/ngxa-auth-routing.module.ts","ng://@xaphira/ngxa-auth/lib/layout/auth-block/auth-block.component.ts","ng://@xaphira/ngxa-auth/lib/layout/ngxa-layout-auth.module.ts","ng://@xaphira/ngxa-auth/lib/services/auth-signature.service.ts","ng://@xaphira/ngxa-auth/lib/services/http-interceptor-token.service.ts","ng://@xaphira/ngxa-auth/lib/services/http-interceptor-signature.service.ts","ng://@xaphira/ngxa-auth/lib/services/auth-lang.service.ts","ng://@xaphira/ngxa-auth/lib/services/http-interceptor-lang.service.ts","ng://@xaphira/ngxa-auth/lib/services/http-error.handler.ts","ng://@xaphira/ngxa-auth/lib/services/http-interceptor-error.service.ts","ng://@xaphira/ngxa-auth/lib/services/auth-user.service.ts","ng://@xaphira/ngxa-auth/lib/auth/ngxa-auth.module.ts","ng://@xaphira/ngxa-auth/lib/miscellaneous/404/404.component.ts","ng://@xaphira/ngxa-auth/lib/miscellaneous/miscellaneous-routing.module.ts","ng://@xaphira/ngxa-auth/lib/miscellaneous/miscellaneous.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__read","o","m","r","i","ar","error","__spread","arguments","concat","AuthIndexedDBService","injector","_super","tslib_1.__extends","getEnc","key","storeName","keyEncrypted","enc","getHmacSha256","oauthResource","$dbPromise","_a","get","_this","decryptAES","putEnc","val","valueEncrypted","encryptAES","put","removeEnc","delete","getOfEnc","result$","Subject","asObservable","putOfEnc","removeOfEnc","loginStorage","response","oauthInfoModels","forEach","data","type","TypeDataOauth","OAUTH","string","JSON","stringify","logout","isLogin","oauthInfo","access_token","Injectable","args","providedIn","Injector","IndexedDBService","ProfileIndexedDBService","PROFILE","remove","SettingsIndexedDBService","translate","TranslateService","SETTINGS","getTranslation","subscribe","lang","use","setTranslation","AuthTokenService","httpBaseService","apiPath","router","authIndexedDB","profileIndexedDB","settingsIndexedDB","idle","setIdle","setTimeout","setInterrupts","DEFAULT_INTERRUPTSOURCES","onTimeout","onIdleEnd","login","username","password","HTTP_BASE","getAuthBody","toString","getAuthHeader","toPromise","watch","refresh","getBodyRefresh","pipe","switchMap","tap","stop","navigate","oauthHeaders","request","httpHeaders","headers","HttpHeaders","has","signatureHeader","authorization","all","token_type","set","clone","Content-Type","Authorization","btoa","Accept","URLSearchParams","append","refresh_token","Inject","HTTP_SERVICE","OAUTH_INFO","API","Router","Idle","AuthGuardService","authTokenService","authService","canActivate","route","state","loadPhotoUser","UserInfo","decorators","USER_INFO","UnauthorizeGuardService","AuthGuardChildService","storage","canActivateChild","strg","includes","EncryptionService","LoginPageComponent","buttonLogin","progressBar","form","FormGroup","FormControl","invalid","document","querySelectorAll","pace","className","replace","progressDOM_1","getElementsByClassName","item","style","transform","getAttributeNode","catch","HttpErrorResponse","responseError","respStatusMessage","respStatusCode","defineProperty","controls","touched","valid","Component","selector","template","LogoutComponent","AuthComponent","location","back","ngOnDestroy","alive","Location","routes","path","component","children","NgxaAuthRoutingModule","NgModule","imports","RouterModule","forChild","exports","AuthBlockComponent","components","NgxaLayoutAuthModule","declarations","NbLayoutModule","NbCardModule","NbIconModule","CommonModule","HttpClientModule","NgxaThemeModule","AuthSignatureService","authStorage","signHeaders","req","combineLatest","signature","getPath","url","take","httpHeaders_1","keys","timestamp","of","public_key","Math","floor","Date","getTime","date","DatePipe","currentLang","DateFormat","DATE","HttpInterceptorTokenService","authToken","destroy$","complete","unsubscribe","intercept","mark","reqAuth","handle","takeUntil","HttpInterceptorSignatureService","authSignature","AuthLanguageService","locale","getLocale","from","localeCode","match","RegExp","Pattern","LOCALE","LOCALE_ID","HttpInterceptorLangService","authLanguage","HttpErrorHandler","isRefreshingToken","refreshTokenSubject","BehaviorSubject","errorHandler","err","status","statusText","ArrayBuffer","decodedString","String","fromCharCode","Uint8Array","parse","Observable","empty","error400","error401","errorDefault","msgKey","valReq","catchError","filter","HttpInterceptorErrorService","AuthUserService","loaderUserSubject$","profile","user","name","picture","getImage","HTTP_AUTH","updatePhotoUser","file","checksum","picture_1","imageBlob_1","Blob","image","reader","FileReader","readAsDataURL","onloadend","getUser","imageBlob","AUTH_PROVIDERS","provide","HTTP_INTERCEPTORS","useClass","multi","AUTH_INDEXED_DB","PROFILE_INDEXED_DB","SETTINGS_INDEXED_DB","NgxaAuthModule","forRoot","ngModule","providers","NbCheckboxModule","NbAlertModule","NbInputModule","NbButtonModule","FormsModule","TranslateModule","ReactiveFormsModule","PageNotFoundComponent","goToHome","MiscellaneousRoutingModule","MiscellaneousModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { StoreKey } from 'idb';\nimport { IndexedDBService } from '@xaphira/ngxa-storage';\nimport { oauthInfo, oauthInfoModels, IndexedDBEncFactoryService, TypeDataOauth } from '@xaphira/shared';\nimport { AuthIDB } from '../models/auth.schema';\n\n@Injectable({providedIn : 'root'})\nexport class AuthIndexedDBService extends IndexedDBService<AuthIDB> implements IndexedDBEncFactoryService {\n\n  constructor(injector: Injector) {\n      super(injector, 'xa-core', 1, '#xa-auth');\n  }\n\n  public async getEnc(key, storeName?: any): Promise<AuthIDB['#xa-auth']['value']> {\n    const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n    return ((await this.$dbPromise).get(storeName ? storeName : '#xa-auth', keyEncrypted)).then((value: any) => {\n      return this.enc.decryptAES(this.oauthResource['aes_key'], value);\n    });\n  }\n  public async putEnc(key, val, storeName?: any): Promise<StoreKey<AuthIDB, any>> {\n    const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n    const valueEncrypted = this.enc.encryptAES(this.oauthResource['aes_key'], val);\n    return (await this.$dbPromise).put(storeName ? storeName : '#xa-auth', valueEncrypted, keyEncrypted);\n  }\n  public async removeEnc(key, storeName?: any): Promise<void> {\n    const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n    return (await this.$dbPromise).delete(storeName ? storeName : '#xa-auth', keyEncrypted);\n  }\n\n  public getOfEnc(key, storeName?: any): Observable<any> {\n    const result$: Subject<any> = new Subject<any>();\n    this.getEnc(key, storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n  public putOfEnc(key, val, storeName?: any): Observable<any> {\n    const result$: Subject<any> = new Subject<any>();\n    this.putEnc(key, val, storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n  public removeOfEnc(key, storeName?: any): Observable<void> {\n    const result$: Subject<any> = new Subject<any>();\n    this.removeEnc(key, storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n\n  public loginStorage(response: any): void {\n    oauthInfoModels.forEach(data => {\n      if (response[data.key]) {\n        if (data.type === TypeDataOauth.OAUTH) {\n          if (data.enc) {\n            this.putEnc(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          } else {\n            this.put(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          }\n        }\n      }\n    });\n  }\n\n  public logout(): void {\n    oauthInfoModels.forEach(data => {\n      if (data.enc) {\n        if (data.type === TypeDataOauth.OAUTH) {\n          this.removeEnc(data.key).then();\n        }\n      }\n    });\n  }\n\n  public async isLogin(): Promise<boolean> {\n      if (await this.getEnc(oauthInfo.access_token))\n          return true;\n      oauthInfoModels.forEach(data => {\n        this.removeEnc(data.key).then();\n      });\n      return false;\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { IndexedDBService } from '@xaphira/ngxa-storage';\nimport { oauthInfoModels, IndexedDBFactoryService, TypeDataOauth } from '@xaphira/shared';\nimport { ProfileIDB } from '../models/profile.schema';\n\n@Injectable({providedIn : 'root'})\nexport class ProfileIndexedDBService extends IndexedDBService<ProfileIDB> implements IndexedDBFactoryService {\n\n  constructor(injector: Injector) {\n    super(injector, 'xa-core', 1, '#xa-profile');\n  }\n\n  public loginStorage(response: any): void {\n    oauthInfoModels.forEach(data => {\n        if (response[data.key]) {\n          if (data.type === TypeDataOauth.PROFILE) {\n            this.put(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          }\n        }\n    });\n  }\n\n  public logout(): void {\n    oauthInfoModels.forEach(data => {\n      if (data.type === TypeDataOauth.PROFILE) {\n        this.remove(data.key);\n      }\n    });\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { IndexedDBService } from '@xaphira/ngxa-storage';\nimport { oauthInfoModels, IndexedDBFactoryService, TypeDataOauth } from '@xaphira/shared';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsIDB } from '../models/settings.schema';\n\n@Injectable({providedIn : 'root'})\nexport class SettingsIndexedDBService extends IndexedDBService<SettingsIDB> implements IndexedDBFactoryService {\n\n  private translate: TranslateService;\n\n  constructor(injector: Injector) {\n    super(injector, 'xa-core', 1, '#xa-settings');\n    this.translate = injector.get(TranslateService);\n  }\n\n  public loginStorage(response: any): void {\n    oauthInfoModels.forEach(data => {\n      if (response[data.key]) {\n        if (data.type === TypeDataOauth.SETTINGS) {\n          this.put(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          if (data.key === 'locale') {\n            this.translate.getTranslation(response[data.key]).subscribe((lang: any) => {\n              this.translate.use(response[data.key]);\n              this.translate.setTranslation(response[data.key], lang, true);\n            });\n          }\n        }\n      }\n    });\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpHeaders, HttpResponse, HttpRequest } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { tap, switchMap } from 'rxjs/operators';\nimport { Idle, DEFAULT_INTERRUPTSOURCES } from '@ng-idle/core';\nimport {\n    HTTP_SERVICE, APIModel, signatureHeader,\n    HttpFactoryService, API,\n    SecurityResourceModel, OAUTH_INFO, oauthInfo } from '@xaphira/shared';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\nimport { ProfileIndexedDBService } from '../storage/profile-indexeddb.service';\nimport { SettingsIndexedDBService } from '../storage/settings-indexeddb.service';\n\n@Injectable()\nexport class AuthTokenService {\n\n    constructor(@Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n        @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n        @Inject(API)private apiPath: APIModel,\n        private router: Router,\n        private authIndexedDB: AuthIndexedDBService,\n        private profileIndexedDB: ProfileIndexedDBService,\n        private settingsIndexedDB: SettingsIndexedDBService,\n        private idle: Idle) {\n        idle.setIdle(oauthResource['session_idle']);\n        idle.setTimeout(oauthResource['session_timeout']);\n        idle.setInterrupts(DEFAULT_INTERRUPTSOURCES);\n        idle.onTimeout.subscribe(() => {\n            /* console.log('[RIP] Session Timeout'); */\n            this.logout();\n        });\n        idle.onIdleEnd.subscribe(() => {\n            /* console.log('[RIP] Session Idle End'); */\n        });\n    }\n\n    public login(username: string, password: string): Promise<any> {\n        this.authIndexedDB.logout();\n        return this.httpBaseService.\n        HTTP_BASE(this.apiPath['auth']['token'],\n            this.getAuthBody(username, password).toString(),\n            this.getAuthHeader())\n                .toPromise()\n                .then((response: HttpResponse<any>) => {\n                    this.idle.setIdle(response['expires_in']);\n                    this.idle.watch();\n                    /* console.log('[RIP] Session Idle Start'); */\n                    /* console.log('[RIP] Session Timeout in '+response['expires_in']+' seconds'); */\n                    this.authIndexedDB.loginStorage(response);\n                    this.profileIndexedDB.loginStorage(response);\n                    this.settingsIndexedDB.loginStorage(response);\n                });\n    }\n\n    public refresh(): Observable<any> {\n        return this.getBodyRefresh().pipe(switchMap((body: any) => {\n            return this.httpBaseService.\n            HTTP_BASE(this.apiPath['auth']['token'],\n                body,\n                this.getAuthHeader())\n                .pipe(tap((response: any) => {\n                    this.idle.setIdle(response['expires_in']);\n                    this.authIndexedDB.logout();\n                    this.authIndexedDB.loginStorage(response);\n                }));\n        }));\n    }\n\n    public logout() {\n        this.idle.stop();\n        this.authIndexedDB.logout();\n        this.profileIndexedDB.logout();\n        this.router.navigate(['/auth']);\n    }\n\n    public async isLogin(): Promise<boolean> {\n        return await this.authIndexedDB.isLogin();\n    }\n\n    public oauthHeaders(request: HttpRequest<any>): Observable<HttpRequest<any>> {\n        const result$: Subject<HttpRequest<any>> = new Subject<HttpRequest<any>>();\n        let httpHeaders: HttpHeaders = request.headers ? request.headers : new HttpHeaders();\n        httpHeaders = httpHeaders.has(signatureHeader.authorization) ?\n                        httpHeaders.delete(signatureHeader.authorization) : httpHeaders;\n        Promise.all([\n            this.authIndexedDB.getEnc(oauthInfo.token_type),\n            this.authIndexedDB.getEnc(oauthInfo.access_token)])\n        .then((value: string[]) => {\n            httpHeaders = httpHeaders.set(signatureHeader.authorization, value[0] + ' ' + value[1]);\n            result$.next(request.clone({ headers: httpHeaders }));\n        });\n        return result$.asObservable();\n    }\n\n    private getAuthHeader(): HttpHeaders {\n        return new HttpHeaders({\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': 'Basic ' +\n                btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n            'Accept': 'application/json',\n        });\n    }\n\n    private getAuthBody(username: string, password: string): URLSearchParams {\n        const body = new URLSearchParams();\n        body.append('client_id', this.oauthResource['client_id']);\n        body.append('grant_type', this.oauthResource['grant_type']);\n        body.append('username', username);\n        body.append('password', password);\n        return body;\n    }\n\n    private getBodyRefresh(): Observable<String> {\n        const result$: Subject<String> = new Subject<String>();\n        this.authIndexedDB.getEnc(oauthInfo.refresh_token).then((value: string) => {\n            const body: URLSearchParams = new URLSearchParams();\n            body.append('client_id', this.oauthResource['client_id']);\n            body.append('grant_type', 'refresh_token');\n            body.append('refresh_token', value);\n            result$.next(body.toString());\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Injectable, Inject } from '@angular/core';\nimport { AuthTokenService } from './auth-token.service';\nimport { Observable, Subject } from 'rxjs';\nimport { USER_INFO, UserInfo } from '@xaphira/shared';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n    constructor(private router: Router, private authTokenService: AuthTokenService,\n        @Inject(USER_INFO) private authService: UserInfo) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n        const result$: Subject<boolean> = new Subject<boolean>();\n        this.authTokenService.isLogin().then((value: boolean) => {\n            result$.next(value);\n            if (!value) {\n                this.router.navigate(['/auth']);\n            } else {\n                this.authService.loadPhotoUser();\n            }\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AuthTokenService } from './auth-token.service';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class UnauthorizeGuardService implements CanActivate {\n    constructor(private router: Router, private authTokenService: AuthTokenService) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n        const result$: Subject<boolean> = new Subject<boolean>();\n        this.authTokenService.isLogin().then((value: boolean) => {\n            result$.next(!value);\n            if (value) {\n                this.router.navigate(['/app']);\n            }\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { ActivatedRouteSnapshot, RouterStateSnapshot, Router, CanActivateChild } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { EncryptionService } from '@xaphira/utils';\nimport { AuthTokenService } from './auth-token.service';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class AuthGuardChildService implements CanActivateChild {\n    constructor(\n        private router: Router,\n        private authTokenService: AuthTokenService,\n        private enc: EncryptionService,\n        private storage: AuthIndexedDBService) {}\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n        const result$: Subject<boolean> = new Subject<boolean>();\n        this.authTokenService.isLogin().then((value: boolean) => {\n            result$.next(value);\n            if (route.data) {\n                Promise.all([\n                    this.storage.getEnc('menus'),\n                    this.storage.getEnc('extras'),\n                ]).then((strg: string[]) => {\n                    if (!(strg[0].includes(route.data['code']) || strg[1].includes(route.data['code']))) {\n                        this.router.navigate(['/app/home']);\n                    }\n                    return result$.asObservable();\n                });\n            }\n            if (!value) {\n                this.router.navigate(['/auth']);\n            }\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { Component } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ApiBaseResponse } from '@xaphira/shared';\nimport { AuthTokenService } from '../../services/auth-token.service';\n\n@Component({\n    selector: 'xa-login-page',\n    styleUrls: ['login-page.component.scss'],\n    templateUrl: 'login-page.component.html',\n})\nexport class LoginPageComponent {\n\n  public responseError: any;\n  public buttonLogin: boolean = false;\n  private progressBar: number = 25;\n\n  public form: FormGroup = new FormGroup({\n    username: new FormControl(),\n    password: new FormControl(),\n  });\n\n  constructor(private router: Router, private authTokenService: AuthTokenService) {}\n\n  public login() {\n    if (!this.form.invalid) {\n      document.querySelectorAll('.pace-done').forEach(pace => {\n        pace.className = pace.className.replace('pace-done pace-done', 'pace-running');\n        pace.className = pace.className.replace('pace-done', 'pace-running');\n      });\n      document.querySelectorAll('.pace-inactive').forEach(pace => {\n        pace.className = pace.className.replace('pace-inactive pace-inactive', 'pace-active');\n        pace.className = pace.className.replace('pace-inactive', 'pace-active');\n      });\n      const progressDOM = document.getElementsByClassName('pace-progress').item(0) as HTMLElement;\n      if (this.progressBar < 35) {\n        this.progressBar = 35;\n        progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n        progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n        progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n      }\n      this.buttonLogin = true;\n      this.authTokenService.login(\n        this.form.get('username').value,\n        this.form.get('password').value)\n        .then(() => {\n            this.progressBar = 90;\n            progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n            progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n            progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n            this.progressBar = 0;\n            this.router.navigate(['/app/home']);\n        })\n        .catch((error: any) => {\n            if (!(error instanceof HttpErrorResponse)) {\n              const response: ApiBaseResponse = (<ApiBaseResponse> error);\n              this.responseError = response.respStatusMessage[response.respStatusCode];\n            }\n            this.buttonLogin = false;\n            this.progressBar = 85;\n            progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n            progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n            progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n            document.querySelectorAll('.pace-running').forEach(pace => {\n              pace.className = pace.className.replace('pace-running', 'pace-done');\n            });\n            document.querySelectorAll('.pace-active').forEach(pace => {\n              pace.className = pace.className.replace('pace-active', 'pace-inactive');\n            });\n            this.progressBar = 0;\n        });\n        if (this.progressBar >= 35 && this.progressBar < 65) {\n            this.progressBar = 65;\n            progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n            progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n            progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n        }\n    }\n  }\n\n  get hasErrorUsername(): boolean {\n    return (\n      this.form.controls['username'] &&\n      this.form.controls['username'].invalid &&\n      this.form.controls['username'].touched\n    );\n  }\n\n  get hasSuccessUsername(): boolean {\n    return (\n      this.form.controls['username'] &&\n      this.form.controls['username'].valid &&\n      this.form.controls['username'].touched\n    );\n  }\n\n  get hasErrorPassword(): boolean {\n    return (\n      this.form.controls['password'] &&\n      this.form.controls['password'].invalid &&\n      this.form.controls['password'].touched\n    );\n  }\n\n  get hasSuccessPassword(): boolean {\n    return (\n      this.form.controls['password'] &&\n      this.form.controls['password'].valid &&\n      this.form.controls['password'].touched\n    );\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { AuthTokenService } from '../../services/auth-token.service';\n\n@Component({\n    selector: 'xa-logout',\n    template: '',\n})\nexport class LogoutComponent {\n\n    constructor(private authTokenService: AuthTokenService) {\n        this.authTokenService.logout();\n    }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'xa-auth',\n  styleUrls: ['auth.component.scss'],\n  templateUrl: 'auth.component.html',\n})\nexport class AuthComponent implements OnDestroy {\n\n    alive: boolean;\n    subscription: any;\n    authenticated: boolean;\n    token: string;\n\n    constructor(private location: Location) {}\n\n    public back(): boolean {\n        this.location.back();\n        return false;\n    }\n\n    ngOnDestroy(): void {\n        this.alive = false;\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthComponent } from '../layout/auth.component';\nimport { LoginPageComponent } from './login/login-page.component';\nimport { UnauthorizeGuardService } from '../services/unauth-guard.service';\nimport { LogoutComponent } from './logout/logout.component';\nimport { AuthGuardService } from '../services/auth-guard.service';\n\nconst routes: Routes = [{\n  path: '',\n  component: AuthComponent,\n  children: [\n    {\n      path: '',\n      component: LoginPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'login',\n      component: LoginPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'logout',\n      component: LogoutComponent,\n      canActivate: [AuthGuardService],\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NgxaAuthRoutingModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'xa-auth-block',\n  styleUrls: ['auth-block.component.scss'],\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class AuthBlockComponent {\n\n}\n","import { NgModule } from '@angular/core';\nimport {\n  NbCardModule,\n  NbLayoutModule,\n  NbIconModule,\n} from '@nebular/theme';\nimport { NgxaThemeModule } from '@xaphira/ngxa-theme';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthComponent } from './auth.component';\nimport { AuthBlockComponent } from './auth-block/auth-block.component';\nimport { RouterModule } from '@angular/router';\n\nconst components = [\n  AuthComponent,\n  AuthBlockComponent,\n];\n\n@NgModule({\n  declarations: [\n    ...components,\n  ],\n  imports: [\n    NbLayoutModule,\n    NbCardModule,\n    NbIconModule,\n    CommonModule,\n    HttpClientModule,\n    NgxaThemeModule,\n    RouterModule,\n  ],\n  exports: [\n    ...components,\n  ],\n})\nexport class NgxaLayoutAuthModule {}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpHeaders, HttpRequest } from '@angular/common/http';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/operator/takeUntil';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DatePipe } from '@angular/common';\nimport { Observable, of, combineLatest } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport { signatureHeader, SecurityResourceModel, OAUTH_INFO, oauthInfo } from '@xaphira/shared';\nimport { DateFormat, EncryptionService } from '@xaphira/utils';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\n\n@Injectable()\nexport class AuthSignatureService {\n\n    constructor(\n        private translate: TranslateService,\n        private enc: EncryptionService,\n        @Inject(OAUTH_INFO) private oauthResource: SecurityResourceModel,\n        private authStorage: AuthIndexedDBService) {}\n\n    public signHeaders(req: HttpRequest<any>): Observable<HttpRequest<any>> {\n        return combineLatest([\n            this.key(),\n            this.signature(this.getPath(req.url)),\n        ]).pipe(\n            take(1),\n            switchMap((value: string[]) => {\n            if (signatureHeader.signature) {\n                let httpHeaders: HttpHeaders = req.headers ? req.headers : new HttpHeaders();\n                httpHeaders.keys().forEach((key: string) => {\n                    if (key === signatureHeader.key)\n                        httpHeaders = httpHeaders.delete(signatureHeader.key);\n                    if (key === signatureHeader.timestamp)\n                        httpHeaders = httpHeaders.delete(signatureHeader.timestamp);\n                    if (key === signatureHeader.signature)\n                        httpHeaders = httpHeaders.delete(signatureHeader.signature);\n                });\n                httpHeaders = httpHeaders.set(signatureHeader.key, value[0]);\n                httpHeaders = httpHeaders.set(signatureHeader.timestamp, this.timestamp());\n                httpHeaders = httpHeaders.set(signatureHeader.signature, value[1]);\n                return of(req.clone({ headers: httpHeaders }));\n            }\n            return of(req);\n        }));\n    }\n\n    public key(): Observable<string> {\n        return this.authStorage.getOfEnc(oauthInfo.public_key);\n    }\n\n    public timestamp(): string {\n        return Math.floor(new Date().getTime() / 1000).toString();\n    }\n\n    public date(): string {\n        return new DatePipe(this.translate.currentLang).transform(new Date(), DateFormat.DATE);\n    }\n\n    public signature(url: string): Observable<string> {\n        return combineLatest([\n            this.key(),\n            this.authStorage.getOfEnc(oauthInfo.access_token),\n        ]).pipe(\n            take(1),\n            switchMap((value: string[]) => {\n            const key = value[0] + ':' +\n                        this.timestamp() + ':' +\n                        this.date() + ':' +\n                        url + ':' +\n                        value[1];\n            return of(this.enc.getHmacSha256(this.oauthResource['private_key'], key));\n        }));\n    }\n\n    private getPath(url: string): string {\n        return '/' + url\n        .replace(/^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*(:[0-9]{1,5})?(\\/).*?/g, '');\n    }\n\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { signatureHeader } from '@xaphira/shared';\nimport { AuthTokenService } from './auth-token.service';\n\n@Injectable()\nexport class HttpInterceptorTokenService implements HttpInterceptor, OnDestroy {\n\n    constructor(private authToken: AuthTokenService) {}\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.headers) {\n            if (req.headers.has(signatureHeader.mark)) {\n                return this.authToken.oauthHeaders(req).pipe(switchMap((reqAuth: any) => {\n                    return next.handle(reqAuth);\n                }));\n            }\n        }\n        return next.handle(req).takeUntil(this.destroy$);\n    }\n\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { Injectable, OnDestroy, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { signatureHeader, SecurityResourceModel, OAUTH_INFO } from '@xaphira/shared';\nimport { AuthSignatureService } from './auth-signature.service';\n\n@Injectable()\nexport class HttpInterceptorSignatureService implements HttpInterceptor, OnDestroy {\n\n    constructor(private authSignature: AuthSignatureService,\n        @Inject(OAUTH_INFO) private oauthResource: SecurityResourceModel) {}\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.headers) {\n            if (req.headers.has(signatureHeader.mark) && this.oauthResource.signature) {\n                return this.authSignature.signHeaders(req).pipe(switchMap((value: HttpRequest<any>) => {\n                    return next.handle(value);\n                }));\n            }\n        }\n        return next.handle(req).takeUntil(this.destroy$);\n    }\n\n}\n","import { Injectable, Inject, LOCALE_ID } from '@angular/core';\nimport { HttpHeaders, HttpRequest } from '@angular/common/http';\nimport { Observable, Subject, of, combineLatest, from } from 'rxjs';\nimport { Pattern } from '@xaphira/utils';\nimport { SettingsIndexedDBService } from '../storage/settings-indexeddb.service';\nimport { take, switchMap } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthLanguageService {\n\n    constructor(@Inject(LOCALE_ID) private locale: string,\n        private settingsIndexedDB: SettingsIndexedDBService) {}\n\n    getLocale(req: HttpRequest<any>): Observable<HttpRequest<any>> {\n        return from(this.settingsIndexedDB.get('locale')).pipe(\n            take(1),\n            switchMap((value: any) => {\n            let httpHeaders: HttpHeaders = req.headers ? req.headers : new HttpHeaders();\n            const localeCode: string = value ?\n            (\n                value.match(new RegExp(Pattern.LOCALE, 'g')) ?\n                value :\n                this.locale\n            ) : this.locale;\n            httpHeaders = httpHeaders.append('Accept-Language', localeCode);\n            return of(req.clone({ headers: httpHeaders }));\n        }));\n    }\n\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { signatureHeader } from '@xaphira/shared';\nimport { AuthLanguageService } from './auth-lang.service';\n\n@Injectable()\nexport class HttpInterceptorLangService implements HttpInterceptor, OnDestroy {\n\n    constructor(private authLanguage: AuthLanguageService) {}\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.headers) {\n            if (req.headers.has(signatureHeader.mark)) {\n                return this.authLanguage.getLocale(req).pipe(switchMap((value: HttpRequest<any>) => {\n                    return next.handle(value);\n                }));\n            }\n        }\n        return next.handle(req).takeUntil(this.destroy$);\n    }\n\n}\n","import { HttpErrorResponse, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter, take, switchMap, catchError } from 'rxjs/operators';\nimport { ApiBaseResponse } from '@xaphira/shared';\nimport { AuthTokenService } from './auth-token.service';\nimport { AuthSignatureService } from './auth-signature.service';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\n\nexport class HttpErrorHandler {\n\n    protected isRefreshingToken: boolean = false;\n    protected refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n    constructor(\n        protected translate: TranslateService,\n        protected authToken: AuthTokenService,\n        protected authStorage: AuthIndexedDBService,\n        protected authSignature: AuthSignatureService) {}\n\n    protected errorHandler(error: HttpErrorResponse, req: HttpRequest<any>, next: HttpHandler): Observable<any> {\n        let err: HttpErrorResponse = new HttpErrorResponse({\n            error: error.error,\n            headers: error.headers,\n            status: error.status,\n            statusText: error.statusText,\n            url: error.url,\n        });\n\n        if (error.error instanceof ArrayBuffer) {\n            const decodedString = String.fromCharCode.apply(null, new Uint8Array(error.error));\n            err = new HttpErrorResponse({\n                error: JSON.parse(decodedString),\n                headers: error.headers,\n                status: error.status,\n                statusText: error.statusText,\n                url: error.url,\n            });\n        }\n        switch (err.status) {\n            case 200:\n            case 201:\n            case 304:\n                return Observable.empty();\n            case 400:\n                return this.error400(err);\n            case 401:\n                return this.error401(err, req, next);\n            case 404:\n            case 403:\n            case 500:\n            case 504:\n            case 0:\n                return Observable.throw(this.errorDefault(err));\n            default:\n                break;\n        }\n        return Observable.throw(err);\n    }\n\n    protected errorDefault(error: any | HttpErrorResponse): ApiBaseResponse {\n        let err: ApiBaseResponse = {\n            respStatusCode: error.status,\n            respStatusMessage: {},\n        };\n        err.respStatusMessage[err.respStatusCode] = error.statusText;\n        let msgKey: string = 'error.' + err.respStatusCode;\n        if (error.error) {\n            if (error.error['respStatusCode']) {\n                err = error.error;\n                msgKey = err.respStatusMessage[err.respStatusCode];\n            }\n        }\n        this.translate.get(msgKey).subscribe((result: string) => {\n            err.respStatusMessage[err.respStatusCode] = result;\n        });\n        return err;\n    }\n\n    protected error400 (error: HttpErrorResponse): Observable<HttpEvent<any>> {\n        if (error.error['respStatusCode']) {\n            if (error.error['respStatusCode'] === 'invalid_grant') {\n                switch (error.error['respStatusMessage']['invalid_grant']) {\n                    case 'Bad credentials':\n                    case 'User account is locked':\n                    case 'User is disabled':\n                    case 'User account has expired':\n                        return Observable.throw(this.errorDefault(error));\n                    default:\n                        this.authToken.logout();\n                        return Observable.throw(this.errorDefault(error));\n                }\n            } else {\n                return Observable.throw(this.errorDefault(error));\n            }\n        }\n        return Observable.throw(error);\n    }\n\n    protected error401 (error: HttpErrorResponse, request: HttpRequest<any>, next: HttpHandler):\n        Observable<HttpEvent<any>> {\n        if (error.error) {\n            if (error.error['respStatusCode'] === 'invalid_token') {\n                if (!this.isRefreshingToken) {\n                    this.isRefreshingToken = true;\n                    this.refreshTokenSubject.next(null);\n                    return this.authToken.refresh().pipe(\n                        switchMap((response: any) => {\n                            this.isRefreshingToken = false;\n                            this.refreshTokenSubject.next(response);\n                            return this.authToken.oauthHeaders(request).pipe(\n                                switchMap((req: any) => {\n                                    request = req;\n                                    return this.authSignature.signHeaders(request).pipe(\n                                        switchMap((valReq: any) => {\n                                            return next.handle(valReq);\n                                        }),\n                                    );\n                                }));\n                        }),\n                        catchError((err: HttpErrorResponse) => {\n                            return this.errorHandler(err, request, next);\n                        }));\n                } else {\n                    const msg: string = error.error['respStatusMessage']['invalid_token'];\n                    if (msg.includes('expired')) {\n                        this.authToken.logout();\n                    } else {\n                        return this.refreshTokenSubject.pipe(\n                            filter(response => response != null),\n                            take(1),\n                            switchMap(() => {\n                                return this.authToken.oauthHeaders(request).pipe(\n                                    switchMap((req: any) => {\n                                        request = req;\n                                        return this.authSignature.signHeaders(request).pipe(\n                                            switchMap((valReq: any) => {\n                                                return next.handle(valReq);\n                                            }),\n                                        );\n                                    }));\n                            }));\n                    }\n                }\n            }\n        }\n        return Observable.throw(error);\n    }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { HttpErrorHandler } from './http-error.handler';\nimport { AuthTokenService } from './auth-token.service';\nimport { AuthSignatureService } from './auth-signature.service';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\n\n@Injectable()\nexport class HttpInterceptorErrorService extends HttpErrorHandler implements HttpInterceptor, OnDestroy {\n\n    constructor(\n        public translate: TranslateService,\n        public authToken: AuthTokenService,\n        public authStorage: AuthIndexedDBService,\n        public authSignature: AuthSignatureService) {\n        super(translate, authToken, authStorage, authSignature);\n    }\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(req).pipe(\n            catchError(error => {\n                if (error instanceof HttpErrorResponse) {\n                    return this.errorHandler(error, req, next);\n                } else {\n                    return Observable.throw(error);\n                }\n        })).takeUntil(this.destroy$);\n    }\n\n}\n","import { Observable, Subject } from 'rxjs';\nimport { Injectable, Inject } from '@angular/core';\nimport { tap } from 'rxjs/operators';\nimport { API, APIModel, HTTP_SERVICE, HttpFactoryService, oauthInfo } from '@xaphira/shared';\nimport { User, UserInfo } from '@xaphira/shared';\nimport { ProfileIndexedDBService } from '../storage/profile-indexeddb.service';\n\n@Injectable()\nexport class AuthUserService extends UserInfo {\n\n    constructor(\n        private profileIndexedDB: ProfileIndexedDBService,\n        @Inject(API)private apiPath: APIModel,\n        @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService) {\n            super();\n    }\n    private loaderUserSubject$ = new Subject<User>();\n\n    public loadPhotoUser(): void {\n        Promise.all([\n            this.profileIndexedDB.get('image-b64'),\n            this.profileIndexedDB.get('image'),\n            this.profileIndexedDB.get('name'),\n        ]).then((value: any[]) => {\n            if (!value[0]) {\n                if (value[1] && value[2]) {\n                    this.getImage(value[1], value[2]);\n                } else {\n                    this.httpBaseService.HTTP_AUTH(\n                    this.apiPath['profile']['get-profile'])\n                    .subscribe((response: any) => {\n                        Promise.all([\n                            this.profileIndexedDB.put('name', response['name']),\n                            this.profileIndexedDB.put('email', response['email']),\n                            this.profileIndexedDB.put('image', response['image']),\n                        ]).then(() => {\n                            this.getImage(response['image'], response['name']);\n                        });\n                    });\n                }\n            } else {\n                Promise.all([\n                    this.profileIndexedDB.get('name'),\n                    this.profileIndexedDB.get('image-b64'),\n                ]).then((profile: any[]) => {\n                    const user: User = {\n                        name: profile[0],\n                        picture: profile[1],\n                    };\n                    this.loaderUserSubject$.next(user);\n                });\n            }\n        });\n    }\n\n    public updatePhotoUser(file: File, checksum: string): Observable<User> {\n        if (file && checksum) {\n            let picture: string;\n            const imageBlob = new Blob([file], {\n                type: 'image/png',\n            });\n            this.profileIndexedDB.put(oauthInfo.image, checksum).then();\n            this.profileIndexedDB.put('image-blob', imageBlob).then();\n            this.profileIndexedDB.get('name').then((name: any) => {\n                const reader: FileReader = new FileReader();\n                reader.readAsDataURL(imageBlob);\n                reader.onloadend = () => {\n                    picture = reader.result.toString();\n                    const user: User = {\n                        name: name,\n                        picture: picture,\n                    };\n                    this.profileIndexedDB.put('image-b64', picture).then();\n                    this.loaderUserSubject$.next(user);\n                };\n            });\n        } else {\n            this.loaderUserSubject$.next(null);\n        }\n        return this.loaderUserSubject$.asObservable();\n    }\n\n    public getUser(): Observable<any> {\n        return this.loaderUserSubject$.asObservable();\n    }\n\n    private getImage(checksum: any, name: string) {\n        this.httpBaseService.HTTP_AUTH(\n        this.apiPath['file']['vw-photo-profile'], null, null, null,\n        [checksum], 'arraybuffer')\n        .pipe(tap((response: any) => {\n            let picture: string;\n            const imageBlob = new Blob([response], {\n                type: 'image/png',\n            });\n            this.profileIndexedDB.put('image-blob', imageBlob).then();\n            const reader: FileReader = new FileReader();\n            reader.readAsDataURL(imageBlob);\n            reader.onloadend = () => {\n                picture = reader.result.toString();\n                const user: User = {\n                    name: name,\n                    picture: picture,\n                };\n                this.profileIndexedDB.put('image-b64', picture).then();\n                this.loaderUserSubject$.next(user);\n            };\n        })).subscribe();\n    }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport {\n  NbCheckboxModule,\n  NbAlertModule,\n  NbInputModule,\n  NbButtonModule,\n  NbIconModule,\n} from '@nebular/theme';\nimport { NgxaThemeModule } from '@xaphira/ngxa-theme';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AUTH_INDEXED_DB, PROFILE_INDEXED_DB, SETTINGS_INDEXED_DB, USER_INFO } from '@xaphira/shared';\nimport { AuthGuardService } from '../services/auth-guard.service';\nimport { UnauthorizeGuardService } from '../services/unauth-guard.service';\nimport { AuthTokenService } from '../services/auth-token.service';\nimport { AuthGuardChildService } from '../services/auth-guard-child.service';\nimport { LoginPageComponent } from './login/login-page.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { NgxaAuthRoutingModule } from './ngxa-auth-routing.module';\nimport { NgxaLayoutAuthModule } from '../layout/ngxa-layout-auth.module';\nimport { AuthSignatureService } from '../services/auth-signature.service';\nimport { HttpInterceptorTokenService } from '../services/http-interceptor-token.service';\nimport { HttpInterceptorSignatureService } from '../services/http-interceptor-signature.service';\nimport { HttpInterceptorLangService } from '../services/http-interceptor-lang.service';\nimport { HttpInterceptorErrorService } from '../services/http-interceptor-error.service';\nimport { AuthUserService } from '../services/auth-user.service';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\nimport { ProfileIndexedDBService } from '../storage/profile-indexeddb.service';\nimport { SettingsIndexedDBService } from '../storage/settings-indexeddb.service';\nimport { AuthLanguageService } from '../services/auth-lang.service';\n\nconst AUTH_PROVIDERS = [\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorTokenService, multi: true},\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorSignatureService, multi: true},\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorLangService, multi: true},\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorErrorService, multi: true},\n  { provide: USER_INFO, useClass: AuthUserService },\n  { provide: AUTH_INDEXED_DB, useClass: AuthIndexedDBService },\n  { provide: PROFILE_INDEXED_DB, useClass: ProfileIndexedDBService },\n  { provide: SETTINGS_INDEXED_DB, useClass: SettingsIndexedDBService },\n  AuthGuardService,\n  UnauthorizeGuardService,\n  AuthTokenService,\n  AuthGuardChildService,\n  AuthSignatureService,\n  AuthLanguageService,\n];\n\nconst components = [\n  LoginPageComponent,\n  LogoutComponent,\n];\n\n@NgModule({\n  declarations: [\n    ...components,\n  ],\n  imports: [\n    NbCheckboxModule,\n    NbAlertModule,\n    NbInputModule,\n    NbButtonModule,\n    NbIconModule,\n    CommonModule,\n    FormsModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxaThemeModule,\n    NgxaLayoutAuthModule,\n    NgxaAuthRoutingModule,\n  ],\n  exports: [\n    ...components,\n  ],\n})\nexport class NgxaAuthModule {\n  static forRoot(): ModuleWithProviders {\n    return <ModuleWithProviders>{\n      ngModule: NgxaAuthModule,\n      providers: [\n        ...AUTH_PROVIDERS,\n      ],\n    };\n  }\n}\n","import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'xa-404',\n  styleUrls: ['./404.component.scss'],\n  templateUrl: './404.component.html',\n})\nexport class PageNotFoundComponent {\n\n  constructor(private location: Location) {\n  }\n\n  goToHome() {\n    this.location.back();\n    return;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PageNotFoundComponent } from './404/404.component';\nimport { AuthComponent } from '../layout/auth.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      {\n        path: '404',\n        component: PageNotFoundComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MiscellaneousRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { NbButtonModule, NbCardModule, NbLayoutModule, NbIconModule } from '@nebular/theme';\n\nimport { NgxaThemeModule } from '@xaphira/ngxa-theme';\nimport { CommonModule } from '@angular/common';\nimport { MiscellaneousRoutingModule } from './miscellaneous-routing.module';\nimport { PageNotFoundComponent } from './404/404.component';\nimport { NgxaLayoutAuthModule } from '../layout/ngxa-layout-auth.module';\n\n@NgModule({\n  imports: [\n    NbButtonModule,\n    NbIconModule,\n    CommonModule,\n    NgxaThemeModule,\n    NgxaLayoutAuthModule,\n    MiscellaneousRoutingModule,\n  ],\n  declarations: [\n    PageNotFoundComponent,\n  ],\n})\nexport class MiscellaneousModule { }\n"]}