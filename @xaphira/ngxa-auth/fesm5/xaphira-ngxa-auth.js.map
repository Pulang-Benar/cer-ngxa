{"version":3,"file":"xaphira-ngxa-auth.js","sources":["ng://@xaphira/ngxa-auth/lib/storage/auth-indexeddb.service.ts","ng://@xaphira/ngxa-auth/lib/storage/profile-indexeddb.service.ts","ng://@xaphira/ngxa-auth/lib/storage/settings-indexeddb.service.ts","ng://@xaphira/ngxa-auth/lib/services/auth-token.service.ts","ng://@xaphira/ngxa-auth/lib/services/auth-guard.service.ts","ng://@xaphira/ngxa-auth/lib/services/unauth-guard.service.ts","ng://@xaphira/ngxa-auth/lib/services/auth-guard-child.service.ts","ng://@xaphira/ngxa-auth/lib/auth/login/login-page.component.ts","ng://@xaphira/ngxa-auth/lib/auth/logout/logout.component.ts","ng://@xaphira/ngxa-auth/lib/layout/auth.component.ts","ng://@xaphira/ngxa-auth/lib/auth/ngxa-auth-routing.module.ts","ng://@xaphira/ngxa-auth/lib/layout/auth-block/auth-block.component.ts","ng://@xaphira/ngxa-auth/lib/layout/ngxa-layout-auth.module.ts","ng://@xaphira/ngxa-auth/lib/services/auth-signature.service.ts","ng://@xaphira/ngxa-auth/lib/services/http-interceptor-token.service.ts","ng://@xaphira/ngxa-auth/lib/services/http-interceptor-signature.service.ts","ng://@xaphira/ngxa-auth/lib/services/auth-lang.service.ts","ng://@xaphira/ngxa-auth/lib/services/http-interceptor-lang.service.ts","ng://@xaphira/ngxa-auth/lib/services/http-error.handler.ts","ng://@xaphira/ngxa-auth/lib/services/http-interceptor-error.service.ts","ng://@xaphira/ngxa-auth/lib/services/auth-user.service.ts","ng://@xaphira/ngxa-auth/lib/auth/ngxa-auth.module.ts","ng://@xaphira/ngxa-auth/lib/miscellaneous/404/404.component.ts","ng://@xaphira/ngxa-auth/lib/miscellaneous/miscellaneous-routing.module.ts","ng://@xaphira/ngxa-auth/lib/miscellaneous/miscellaneous.module.ts"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { StoreKey } from 'idb';\nimport { IndexedDBService } from '@xaphira/ngxa-storage';\nimport { oauthInfo, oauthInfoModels, IndexedDBEncFactoryService, TypeDataOauth } from '@xaphira/shared';\nimport { AuthIDB } from '../models/auth.schema';\n\n@Injectable({providedIn : 'root'})\nexport class AuthIndexedDBService extends IndexedDBService<AuthIDB> implements IndexedDBEncFactoryService {\n\n  constructor(injector: Injector) {\n      super(injector, 'xa-core', 1, '#xa-auth');\n  }\n\n  public async getEnc(key, storeName?: any): Promise<AuthIDB['#xa-auth']['value']> {\n    const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n    return ((await this.$dbPromise).get(storeName ? storeName : '#xa-auth', keyEncrypted)).then((value: any) => {\n      return this.enc.decryptAES(this.oauthResource['aes_key'], value);\n    });\n  }\n  public async putEnc(key, val, storeName?: any): Promise<StoreKey<AuthIDB, any>> {\n    const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n    const valueEncrypted = this.enc.encryptAES(this.oauthResource['aes_key'], val);\n    return (await this.$dbPromise).put(storeName ? storeName : '#xa-auth', valueEncrypted, keyEncrypted);\n  }\n  public async removeEnc(key, storeName?: any): Promise<void> {\n    const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n    return (await this.$dbPromise).delete(storeName ? storeName : '#xa-auth', keyEncrypted);\n  }\n\n  public getOfEnc(key, storeName?: any): Observable<any> {\n    const result$: Subject<any> = new Subject<any>();\n    this.getEnc(key, storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n  public putOfEnc(key, val, storeName?: any): Observable<any> {\n    const result$: Subject<any> = new Subject<any>();\n    this.putEnc(key, val, storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n  public removeOfEnc(key, storeName?: any): Observable<void> {\n    const result$: Subject<any> = new Subject<any>();\n    this.removeEnc(key, storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n\n  public loginStorage(response: any): void {\n    oauthInfoModels.forEach(data => {\n      if (response[data.key]) {\n        if (data.type === TypeDataOauth.OAUTH) {\n          if (data.enc) {\n            this.putEnc(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          } else {\n            this.put(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          }\n        }\n      }\n    });\n  }\n\n  public logout(): void {\n    oauthInfoModels.forEach(data => {\n      if (data.enc) {\n        if (data.type === TypeDataOauth.OAUTH) {\n          this.removeEnc(data.key).then();\n        }\n      }\n    });\n  }\n\n  public async isLogin(): Promise<boolean> {\n      if (await this.getEnc(oauthInfo.access_token))\n          return true;\n      oauthInfoModels.forEach(data => {\n        this.removeEnc(data.key).then();\n      });\n      return false;\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { IndexedDBService } from '@xaphira/ngxa-storage';\nimport { oauthInfoModels, IndexedDBFactoryService, TypeDataOauth } from '@xaphira/shared';\nimport { ProfileIDB } from '../models/profile.schema';\n\n@Injectable({providedIn : 'root'})\nexport class ProfileIndexedDBService extends IndexedDBService<ProfileIDB> implements IndexedDBFactoryService {\n\n  constructor(injector: Injector) {\n    super(injector, 'xa-core', 1, '#xa-profile');\n  }\n\n  public loginStorage(response: any): void {\n    oauthInfoModels.forEach(data => {\n        if (response[data.key]) {\n          if (data.type === TypeDataOauth.PROFILE) {\n            this.put(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          }\n        }\n    });\n  }\n\n  public logout(): void {\n    oauthInfoModels.forEach(data => {\n      if (data.type === TypeDataOauth.PROFILE) {\n        this.remove(data.key);\n      }\n    });\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { IndexedDBService } from '@xaphira/ngxa-storage';\nimport { oauthInfoModels, IndexedDBFactoryService, TypeDataOauth } from '@xaphira/shared';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsIDB } from '../models/settings.schema';\n\n@Injectable({providedIn : 'root'})\nexport class SettingsIndexedDBService extends IndexedDBService<SettingsIDB> implements IndexedDBFactoryService {\n\n  private translate: TranslateService;\n\n  constructor(injector: Injector) {\n    super(injector, 'xa-core', 1, '#xa-settings');\n    this.translate = injector.get(TranslateService);\n  }\n\n  public loginStorage(response: any): void {\n    oauthInfoModels.forEach(data => {\n      if (response[data.key]) {\n        if (data.type === TypeDataOauth.SETTINGS) {\n          this.put(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          if (data.key === 'locale') {\n            this.translate.getTranslation(response[data.key]).subscribe((lang: any) => {\n              this.translate.use(response[data.key]);\n              this.translate.setTranslation(response[data.key], lang, true);\n            });\n          }\n        }\n      }\n    });\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpHeaders, HttpResponse, HttpRequest } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { tap, switchMap } from 'rxjs/operators';\nimport { Idle, DEFAULT_INTERRUPTSOURCES } from '@ng-idle/core';\nimport {\n    HTTP_SERVICE, APIModel, signatureHeader,\n    HttpFactoryService, API,\n    SecurityResourceModel, OAUTH_INFO, oauthInfo } from '@xaphira/shared';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\nimport { ProfileIndexedDBService } from '../storage/profile-indexeddb.service';\nimport { SettingsIndexedDBService } from '../storage/settings-indexeddb.service';\n\n@Injectable()\nexport class AuthTokenService {\n\n    constructor(@Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n        @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n        @Inject(API)private apiPath: APIModel,\n        private router: Router,\n        private authIndexedDB: AuthIndexedDBService,\n        private profileIndexedDB: ProfileIndexedDBService,\n        private settingsIndexedDB: SettingsIndexedDBService,\n        private idle: Idle) {\n        idle.setIdle(oauthResource['session_idle']);\n        idle.setTimeout(oauthResource['session_timeout']);\n        idle.setInterrupts(DEFAULT_INTERRUPTSOURCES);\n        idle.onTimeout.subscribe(() => {\n            /* console.log('[RIP] Session Timeout'); */\n            this.logout();\n        });\n        idle.onIdleEnd.subscribe(() => {\n            /* console.log('[RIP] Session Idle End'); */\n        });\n    }\n\n    public login(username: string, password: string): Promise<any> {\n        this.authIndexedDB.logout();\n        return this.httpBaseService.\n        HTTP_BASE(this.apiPath['auth']['token'],\n            this.getAuthBody(username, password).toString(),\n            this.getAuthHeader())\n                .toPromise()\n                .then((response: HttpResponse<any>) => {\n                    this.idle.setIdle(response['expires_in']);\n                    this.idle.watch();\n                    /* console.log('[RIP] Session Idle Start'); */\n                    /* console.log('[RIP] Session Timeout in '+response['expires_in']+' seconds'); */\n                    this.authIndexedDB.loginStorage(response);\n                    this.profileIndexedDB.loginStorage(response);\n                    this.settingsIndexedDB.loginStorage(response);\n                });\n    }\n\n    public refresh(): Observable<any> {\n        return this.getBodyRefresh().pipe(switchMap((body: any) => {\n            return this.httpBaseService.\n            HTTP_BASE(this.apiPath['auth']['token'],\n                body,\n                this.getAuthHeader())\n                .pipe(tap((response: any) => {\n                    this.idle.setIdle(response['expires_in']);\n                    this.authIndexedDB.logout();\n                    this.authIndexedDB.loginStorage(response);\n                }));\n        }));\n    }\n\n    public logout() {\n        this.idle.stop();\n        this.authIndexedDB.logout();\n        this.profileIndexedDB.logout();\n        this.router.navigate(['/auth']);\n    }\n\n    public async isLogin(): Promise<boolean> {\n        return await this.authIndexedDB.isLogin();\n    }\n\n    public oauthHeaders(request: HttpRequest<any>): Observable<HttpRequest<any>> {\n        const result$: Subject<HttpRequest<any>> = new Subject<HttpRequest<any>>();\n        let httpHeaders: HttpHeaders = request.headers ? request.headers : new HttpHeaders();\n        httpHeaders = httpHeaders.has(signatureHeader.authorization) ?\n                        httpHeaders.delete(signatureHeader.authorization) : httpHeaders;\n        Promise.all([\n            this.authIndexedDB.getEnc(oauthInfo.token_type),\n            this.authIndexedDB.getEnc(oauthInfo.access_token)])\n        .then((value: string[]) => {\n            httpHeaders = httpHeaders.set(signatureHeader.authorization, value[0] + ' ' + value[1]);\n            result$.next(request.clone({ headers: httpHeaders }));\n        });\n        return result$.asObservable();\n    }\n\n    private getAuthHeader(): HttpHeaders {\n        return new HttpHeaders({\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': 'Basic ' +\n                btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n            'Accept': 'application/json',\n        });\n    }\n\n    private getAuthBody(username: string, password: string): URLSearchParams {\n        const body = new URLSearchParams();\n        body.append('client_id', this.oauthResource['client_id']);\n        body.append('grant_type', this.oauthResource['grant_type']);\n        body.append('username', username);\n        body.append('password', password);\n        return body;\n    }\n\n    private getBodyRefresh(): Observable<String> {\n        const result$: Subject<String> = new Subject<String>();\n        this.authIndexedDB.getEnc(oauthInfo.refresh_token).then((value: string) => {\n            const body: URLSearchParams = new URLSearchParams();\n            body.append('client_id', this.oauthResource['client_id']);\n            body.append('grant_type', 'refresh_token');\n            body.append('refresh_token', value);\n            result$.next(body.toString());\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Injectable, Inject } from '@angular/core';\nimport { AuthTokenService } from './auth-token.service';\nimport { Observable, Subject } from 'rxjs';\nimport { USER_INFO, UserInfo } from '@xaphira/shared';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n    constructor(private router: Router, private authTokenService: AuthTokenService,\n        @Inject(USER_INFO) private authService: UserInfo) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n        const result$: Subject<boolean> = new Subject<boolean>();\n        this.authTokenService.isLogin().then((value: boolean) => {\n            result$.next(value);\n            if (!value) {\n                this.router.navigate(['/auth']);\n            } else {\n                this.authService.loadPhotoUser();\n            }\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AuthTokenService } from './auth-token.service';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class UnauthorizeGuardService implements CanActivate {\n    constructor(private router: Router, private authTokenService: AuthTokenService) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n        const result$: Subject<boolean> = new Subject<boolean>();\n        this.authTokenService.isLogin().then((value: boolean) => {\n            result$.next(!value);\n            if (value) {\n                this.router.navigate(['/app']);\n            }\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { ActivatedRouteSnapshot, RouterStateSnapshot, Router, CanActivateChild } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { EncryptionService } from '@xaphira/utils';\nimport { AuthTokenService } from './auth-token.service';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class AuthGuardChildService implements CanActivateChild {\n    constructor(\n        private router: Router,\n        private authTokenService: AuthTokenService,\n        private enc: EncryptionService,\n        private storage: AuthIndexedDBService) {}\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n        const result$: Subject<boolean> = new Subject<boolean>();\n        this.authTokenService.isLogin().then((value: boolean) => {\n            result$.next(value);\n            if (route.data) {\n                Promise.all([\n                    this.storage.getEnc('menus'),\n                    this.storage.getEnc('extras'),\n                ]).then((strg: string[]) => {\n                    if (!(strg[0].includes(route.data['code']) || strg[1].includes(route.data['code']))) {\n                        this.router.navigate(['/app/home']);\n                    }\n                    return result$.asObservable();\n                });\n            }\n            if (!value) {\n                this.router.navigate(['/auth']);\n            }\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { Component } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ApiBaseResponse } from '@xaphira/shared';\nimport { AuthTokenService } from '../../services/auth-token.service';\n\n@Component({\n    selector: 'xa-login-page',\n    styleUrls: ['login-page.component.scss'],\n    templateUrl: 'login-page.component.html',\n})\nexport class LoginPageComponent {\n\n  public responseError: any;\n  public buttonLogin: boolean = false;\n  private progressBar: number = 25;\n\n  public form: FormGroup = new FormGroup({\n    username: new FormControl(),\n    password: new FormControl(),\n  });\n\n  constructor(private router: Router, private authTokenService: AuthTokenService) {}\n\n  public login() {\n    if (!this.form.invalid) {\n      document.querySelectorAll('.pace-done').forEach(pace => {\n        pace.className = pace.className.replace('pace-done pace-done', 'pace-running');\n        pace.className = pace.className.replace('pace-done', 'pace-running');\n      });\n      document.querySelectorAll('.pace-inactive').forEach(pace => {\n        pace.className = pace.className.replace('pace-inactive pace-inactive', 'pace-active');\n        pace.className = pace.className.replace('pace-inactive', 'pace-active');\n      });\n      const progressDOM = document.getElementsByClassName('pace-progress').item(0) as HTMLElement;\n      if (this.progressBar < 35) {\n        this.progressBar = 35;\n        progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n        progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n        progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n      }\n      this.buttonLogin = true;\n      this.authTokenService.login(\n        this.form.get('username').value,\n        this.form.get('password').value)\n        .then(() => {\n            this.progressBar = 90;\n            progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n            progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n            progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n            this.progressBar = 0;\n            this.router.navigate(['/app/home']);\n        })\n        .catch((error: any) => {\n            if (!(error instanceof HttpErrorResponse)) {\n              const response: ApiBaseResponse = (<ApiBaseResponse> error);\n              this.responseError = response.respStatusMessage[response.respStatusCode];\n            }\n            this.buttonLogin = false;\n            this.progressBar = 85;\n            progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n            progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n            progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n            document.querySelectorAll('.pace-running').forEach(pace => {\n              pace.className = pace.className.replace('pace-running', 'pace-done');\n            });\n            document.querySelectorAll('.pace-active').forEach(pace => {\n              pace.className = pace.className.replace('pace-active', 'pace-inactive');\n            });\n            this.progressBar = 0;\n        });\n        if (this.progressBar >= 35 && this.progressBar < 65) {\n            this.progressBar = 65;\n            progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n            progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n            progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n        }\n    }\n  }\n\n  get hasErrorUsername(): boolean {\n    return (\n      this.form.controls['username'] &&\n      this.form.controls['username'].invalid &&\n      this.form.controls['username'].touched\n    );\n  }\n\n  get hasSuccessUsername(): boolean {\n    return (\n      this.form.controls['username'] &&\n      this.form.controls['username'].valid &&\n      this.form.controls['username'].touched\n    );\n  }\n\n  get hasErrorPassword(): boolean {\n    return (\n      this.form.controls['password'] &&\n      this.form.controls['password'].invalid &&\n      this.form.controls['password'].touched\n    );\n  }\n\n  get hasSuccessPassword(): boolean {\n    return (\n      this.form.controls['password'] &&\n      this.form.controls['password'].valid &&\n      this.form.controls['password'].touched\n    );\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { AuthTokenService } from '../../services/auth-token.service';\n\n@Component({\n    selector: 'xa-logout',\n    template: '',\n})\nexport class LogoutComponent {\n\n    constructor(private authTokenService: AuthTokenService) {\n        this.authTokenService.logout();\n    }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'xa-auth',\n  styleUrls: ['auth.component.scss'],\n  templateUrl: 'auth.component.html',\n})\nexport class AuthComponent implements OnDestroy {\n\n    alive: boolean;\n    subscription: any;\n    authenticated: boolean;\n    token: string;\n\n    constructor(private location: Location) {}\n\n    public back(): boolean {\n        this.location.back();\n        return false;\n    }\n\n    ngOnDestroy(): void {\n        this.alive = false;\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthComponent } from '../layout/auth.component';\nimport { LoginPageComponent } from './login/login-page.component';\nimport { UnauthorizeGuardService } from '../services/unauth-guard.service';\nimport { LogoutComponent } from './logout/logout.component';\nimport { AuthGuardService } from '../services/auth-guard.service';\n\nconst routes: Routes = [{\n  path: '',\n  component: AuthComponent,\n  children: [\n    {\n      path: '',\n      component: LoginPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'login',\n      component: LoginPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'logout',\n      component: LogoutComponent,\n      canActivate: [AuthGuardService],\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NgxaAuthRoutingModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'xa-auth-block',\n  styleUrls: ['auth-block.component.scss'],\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class AuthBlockComponent {\n\n}\n","import { NgModule } from '@angular/core';\nimport {\n  NbCardModule,\n  NbLayoutModule,\n  NbIconModule,\n} from '@nebular/theme';\nimport { NgxaThemeModule } from '@xaphira/ngxa-theme';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthComponent } from './auth.component';\nimport { AuthBlockComponent } from './auth-block/auth-block.component';\nimport { RouterModule } from '@angular/router';\n\nconst components = [\n  AuthComponent,\n  AuthBlockComponent,\n];\n\n@NgModule({\n  declarations: [\n    ...components,\n  ],\n  imports: [\n    NbLayoutModule,\n    NbCardModule,\n    NbIconModule,\n    CommonModule,\n    HttpClientModule,\n    NgxaThemeModule,\n    RouterModule,\n  ],\n  exports: [\n    ...components,\n  ],\n})\nexport class NgxaLayoutAuthModule {}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpHeaders, HttpRequest } from '@angular/common/http';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/operator/takeUntil';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DatePipe } from '@angular/common';\nimport { Observable, of, combineLatest } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport { signatureHeader, SecurityResourceModel, OAUTH_INFO, oauthInfo } from '@xaphira/shared';\nimport { DateFormat, EncryptionService } from '@xaphira/utils';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\n\n@Injectable()\nexport class AuthSignatureService {\n\n    constructor(\n        private translate: TranslateService,\n        private enc: EncryptionService,\n        @Inject(OAUTH_INFO) private oauthResource: SecurityResourceModel,\n        private authStorage: AuthIndexedDBService) {}\n\n    public signHeaders(req: HttpRequest<any>): Observable<HttpRequest<any>> {\n        return combineLatest([\n            this.key(),\n            this.signature(this.getPath(req.url)),\n        ]).pipe(\n            take(1),\n            switchMap((value: string[]) => {\n            if (signatureHeader.signature) {\n                let httpHeaders: HttpHeaders = req.headers ? req.headers : new HttpHeaders();\n                httpHeaders.keys().forEach((key: string) => {\n                    if (key === signatureHeader.key)\n                        httpHeaders = httpHeaders.delete(signatureHeader.key);\n                    if (key === signatureHeader.timestamp)\n                        httpHeaders = httpHeaders.delete(signatureHeader.timestamp);\n                    if (key === signatureHeader.signature)\n                        httpHeaders = httpHeaders.delete(signatureHeader.signature);\n                });\n                httpHeaders = httpHeaders.set(signatureHeader.key, value[0]);\n                httpHeaders = httpHeaders.set(signatureHeader.timestamp, this.timestamp());\n                httpHeaders = httpHeaders.set(signatureHeader.signature, value[1]);\n                return of(req.clone({ headers: httpHeaders }));\n            }\n            return of(req);\n        }));\n    }\n\n    public key(): Observable<string> {\n        return this.authStorage.getOfEnc(oauthInfo.public_key);\n    }\n\n    public timestamp(): string {\n        return Math.floor(new Date().getTime() / 1000).toString();\n    }\n\n    public date(): string {\n        return new DatePipe(this.translate.currentLang).transform(new Date(), DateFormat.DATE);\n    }\n\n    public signature(url: string): Observable<string> {\n        return combineLatest([\n            this.key(),\n            this.authStorage.getOfEnc(oauthInfo.access_token),\n        ]).pipe(\n            take(1),\n            switchMap((value: string[]) => {\n            const key = value[0] + ':' +\n                        this.timestamp() + ':' +\n                        this.date() + ':' +\n                        url + ':' +\n                        value[1];\n            return of(this.enc.getHmacSha256(this.oauthResource['private_key'], key));\n        }));\n    }\n\n    private getPath(url: string): string {\n        return '/' + url\n        .replace(/^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*(:[0-9]{1,5})?(\\/).*?/g, '');\n    }\n\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { signatureHeader } from '@xaphira/shared';\nimport { AuthTokenService } from './auth-token.service';\n\n@Injectable()\nexport class HttpInterceptorTokenService implements HttpInterceptor, OnDestroy {\n\n    constructor(private authToken: AuthTokenService) {}\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.headers) {\n            if (req.headers.has(signatureHeader.mark)) {\n                return this.authToken.oauthHeaders(req).pipe(switchMap((reqAuth: any) => {\n                    return next.handle(reqAuth);\n                }));\n            }\n        }\n        return next.handle(req).takeUntil(this.destroy$);\n    }\n\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { Injectable, OnDestroy, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { signatureHeader, SecurityResourceModel, OAUTH_INFO } from '@xaphira/shared';\nimport { AuthSignatureService } from './auth-signature.service';\n\n@Injectable()\nexport class HttpInterceptorSignatureService implements HttpInterceptor, OnDestroy {\n\n    constructor(private authSignature: AuthSignatureService,\n        @Inject(OAUTH_INFO) private oauthResource: SecurityResourceModel) {}\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.headers) {\n            if (req.headers.has(signatureHeader.mark) && this.oauthResource.signature) {\n                return this.authSignature.signHeaders(req).pipe(switchMap((value: HttpRequest<any>) => {\n                    return next.handle(value);\n                }));\n            }\n        }\n        return next.handle(req).takeUntil(this.destroy$);\n    }\n\n}\n","import { Injectable, Inject, LOCALE_ID } from '@angular/core';\nimport { HttpHeaders, HttpRequest } from '@angular/common/http';\nimport { Observable, Subject, of, combineLatest, from } from 'rxjs';\nimport { Pattern } from '@xaphira/utils';\nimport { SettingsIndexedDBService } from '../storage/settings-indexeddb.service';\nimport { take, switchMap } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthLanguageService {\n\n    constructor(@Inject(LOCALE_ID) private locale: string,\n        private settingsIndexedDB: SettingsIndexedDBService) {}\n\n    getLocale(req: HttpRequest<any>): Observable<HttpRequest<any>> {\n        return from(this.settingsIndexedDB.get('locale')).pipe(\n            take(1),\n            switchMap((value: any) => {\n            let httpHeaders: HttpHeaders = req.headers ? req.headers : new HttpHeaders();\n            const localeCode: string = value ?\n            (\n                value.match(new RegExp(Pattern.LOCALE, 'g')) ?\n                value :\n                this.locale\n            ) : this.locale;\n            httpHeaders = httpHeaders.append('Accept-Language', localeCode);\n            return of(req.clone({ headers: httpHeaders }));\n        }));\n    }\n\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { signatureHeader } from '@xaphira/shared';\nimport { AuthLanguageService } from './auth-lang.service';\n\n@Injectable()\nexport class HttpInterceptorLangService implements HttpInterceptor, OnDestroy {\n\n    constructor(private authLanguage: AuthLanguageService) {}\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.headers) {\n            if (req.headers.has(signatureHeader.mark)) {\n                return this.authLanguage.getLocale(req).pipe(switchMap((value: HttpRequest<any>) => {\n                    return next.handle(value);\n                }));\n            }\n        }\n        return next.handle(req).takeUntil(this.destroy$);\n    }\n\n}\n","import { HttpErrorResponse, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter, take, switchMap, catchError } from 'rxjs/operators';\nimport { ApiBaseResponse } from '@xaphira/shared';\nimport { AuthTokenService } from './auth-token.service';\nimport { AuthSignatureService } from './auth-signature.service';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\n\nexport class HttpErrorHandler {\n\n    protected isRefreshingToken: boolean = false;\n    protected refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n    constructor(\n        protected translate: TranslateService,\n        protected authToken: AuthTokenService,\n        protected authStorage: AuthIndexedDBService,\n        protected authSignature: AuthSignatureService) {}\n\n    protected errorHandler(error: HttpErrorResponse, req: HttpRequest<any>, next: HttpHandler): Observable<any> {\n        let err: HttpErrorResponse = new HttpErrorResponse({\n            error: error.error,\n            headers: error.headers,\n            status: error.status,\n            statusText: error.statusText,\n            url: error.url,\n        });\n\n        if (error.error instanceof ArrayBuffer) {\n            const decodedString = String.fromCharCode.apply(null, new Uint8Array(error.error));\n            err = new HttpErrorResponse({\n                error: JSON.parse(decodedString),\n                headers: error.headers,\n                status: error.status,\n                statusText: error.statusText,\n                url: error.url,\n            });\n        }\n        switch (err.status) {\n            case 200:\n            case 201:\n            case 304:\n                return Observable.empty();\n            case 400:\n                return this.error400(err);\n            case 401:\n                return this.error401(err, req, next);\n            case 404:\n            case 403:\n            case 500:\n            case 504:\n            case 0:\n                return Observable.throw(this.errorDefault(err));\n            default:\n                break;\n        }\n        return Observable.throw(err);\n    }\n\n    protected errorDefault(error: any | HttpErrorResponse): ApiBaseResponse {\n        let err: ApiBaseResponse = {\n            respStatusCode: error.status,\n            respStatusMessage: {},\n        };\n        err.respStatusMessage[err.respStatusCode] = error.statusText;\n        let msgKey: string = 'error.' + err.respStatusCode;\n        if (error.error) {\n            if (error.error['respStatusCode']) {\n                err = error.error;\n                msgKey = err.respStatusMessage[err.respStatusCode];\n            }\n        }\n        this.translate.get(msgKey).subscribe((result: string) => {\n            err.respStatusMessage[err.respStatusCode] = result;\n        });\n        return err;\n    }\n\n    protected error400 (error: HttpErrorResponse): Observable<HttpEvent<any>> {\n        if (error.error['respStatusCode']) {\n            if (error.error['respStatusCode'] === 'invalid_grant') {\n                switch (error.error['respStatusMessage']['invalid_grant']) {\n                    case 'Bad credentials':\n                    case 'User account is locked':\n                    case 'User is disabled':\n                    case 'User account has expired':\n                        return Observable.throw(this.errorDefault(error));\n                    default:\n                        this.authToken.logout();\n                        return Observable.throw(this.errorDefault(error));\n                }\n            } else {\n                return Observable.throw(this.errorDefault(error));\n            }\n        }\n        return Observable.throw(error);\n    }\n\n    protected error401 (error: HttpErrorResponse, request: HttpRequest<any>, next: HttpHandler):\n        Observable<HttpEvent<any>> {\n        if (error.error) {\n            if (error.error['respStatusCode'] === 'invalid_token') {\n                if (!this.isRefreshingToken) {\n                    this.isRefreshingToken = true;\n                    this.refreshTokenSubject.next(null);\n                    return this.authToken.refresh().pipe(\n                        switchMap((response: any) => {\n                            this.isRefreshingToken = false;\n                            this.refreshTokenSubject.next(response);\n                            return this.authToken.oauthHeaders(request).pipe(\n                                switchMap((req: any) => {\n                                    request = req;\n                                    return this.authSignature.signHeaders(request).pipe(\n                                        switchMap((valReq: any) => {\n                                            return next.handle(valReq);\n                                        }),\n                                    );\n                                }));\n                        }),\n                        catchError((err: HttpErrorResponse) => {\n                            return this.errorHandler(err, request, next);\n                        }));\n                } else {\n                    const msg: string = error.error['respStatusMessage']['invalid_token'];\n                    if (msg.includes('expired')) {\n                        this.authToken.logout();\n                    } else {\n                        return this.refreshTokenSubject.pipe(\n                            filter(response => response != null),\n                            take(1),\n                            switchMap(() => {\n                                return this.authToken.oauthHeaders(request).pipe(\n                                    switchMap((req: any) => {\n                                        request = req;\n                                        return this.authSignature.signHeaders(request).pipe(\n                                            switchMap((valReq: any) => {\n                                                return next.handle(valReq);\n                                            }),\n                                        );\n                                    }));\n                            }));\n                    }\n                }\n            }\n        }\n        return Observable.throw(error);\n    }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { HttpErrorHandler } from './http-error.handler';\nimport { AuthTokenService } from './auth-token.service';\nimport { AuthSignatureService } from './auth-signature.service';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\n\n@Injectable()\nexport class HttpInterceptorErrorService extends HttpErrorHandler implements HttpInterceptor, OnDestroy {\n\n    constructor(\n        public translate: TranslateService,\n        public authToken: AuthTokenService,\n        public authStorage: AuthIndexedDBService,\n        public authSignature: AuthSignatureService) {\n        super(translate, authToken, authStorage, authSignature);\n    }\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(req).pipe(\n            catchError(error => {\n                if (error instanceof HttpErrorResponse) {\n                    return this.errorHandler(error, req, next);\n                } else {\n                    return Observable.throw(error);\n                }\n        })).takeUntil(this.destroy$);\n    }\n\n}\n","import { Observable, Subject } from 'rxjs';\nimport { Injectable, Inject } from '@angular/core';\nimport { tap } from 'rxjs/operators';\nimport { API, APIModel, HTTP_SERVICE, HttpFactoryService, oauthInfo } from '@xaphira/shared';\nimport { User, UserInfo } from '@xaphira/shared';\nimport { ProfileIndexedDBService } from '../storage/profile-indexeddb.service';\n\n@Injectable()\nexport class AuthUserService extends UserInfo {\n\n    constructor(\n        private profileIndexedDB: ProfileIndexedDBService,\n        @Inject(API)private apiPath: APIModel,\n        @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService) {\n            super();\n    }\n    private loaderUserSubject$ = new Subject<User>();\n\n    public loadPhotoUser(): void {\n        Promise.all([\n            this.profileIndexedDB.get('image-b64'),\n            this.profileIndexedDB.get('image'),\n            this.profileIndexedDB.get('name'),\n        ]).then((value: any[]) => {\n            if (!value[0]) {\n                if (value[1] && value[2]) {\n                    this.getImage(value[1], value[2]);\n                } else {\n                    this.httpBaseService.HTTP_AUTH(\n                    this.apiPath['profile']['get-profile'])\n                    .subscribe((response: any) => {\n                        Promise.all([\n                            this.profileIndexedDB.put('name', response['name']),\n                            this.profileIndexedDB.put('email', response['email']),\n                            this.profileIndexedDB.put('image', response['image']),\n                        ]).then(() => {\n                            this.getImage(response['image'], response['name']);\n                        });\n                    });\n                }\n            } else {\n                Promise.all([\n                    this.profileIndexedDB.get('name'),\n                    this.profileIndexedDB.get('image-b64'),\n                ]).then((profile: any[]) => {\n                    const user: User = {\n                        name: profile[0],\n                        picture: profile[1],\n                    };\n                    this.loaderUserSubject$.next(user);\n                });\n            }\n        });\n    }\n\n    public updatePhotoUser(file: File, checksum: string): Observable<User> {\n        if (file && checksum) {\n            let picture: string;\n            const imageBlob = new Blob([file], {\n                type: 'image/png',\n            });\n            this.profileIndexedDB.put(oauthInfo.image, checksum).then();\n            this.profileIndexedDB.put('image-blob', imageBlob).then();\n            this.profileIndexedDB.get('name').then((name: any) => {\n                const reader: FileReader = new FileReader();\n                reader.readAsDataURL(imageBlob);\n                reader.onloadend = () => {\n                    picture = reader.result.toString();\n                    const user: User = {\n                        name: name,\n                        picture: picture,\n                    };\n                    this.profileIndexedDB.put('image-b64', picture).then();\n                    this.loaderUserSubject$.next(user);\n                };\n            });\n        } else {\n            this.loaderUserSubject$.next(null);\n        }\n        return this.loaderUserSubject$.asObservable();\n    }\n\n    public getUser(): Observable<any> {\n        return this.loaderUserSubject$.asObservable();\n    }\n\n    private getImage(checksum: any, name: string) {\n        this.httpBaseService.HTTP_AUTH(\n        this.apiPath['file']['vw-photo-profile'], null, null, null,\n        [checksum], 'arraybuffer')\n        .pipe(tap((response: any) => {\n            let picture: string;\n            const imageBlob = new Blob([response], {\n                type: 'image/png',\n            });\n            this.profileIndexedDB.put('image-blob', imageBlob).then();\n            const reader: FileReader = new FileReader();\n            reader.readAsDataURL(imageBlob);\n            reader.onloadend = () => {\n                picture = reader.result.toString();\n                const user: User = {\n                    name: name,\n                    picture: picture,\n                };\n                this.profileIndexedDB.put('image-b64', picture).then();\n                this.loaderUserSubject$.next(user);\n            };\n        })).subscribe();\n    }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport {\n  NbCheckboxModule,\n  NbAlertModule,\n  NbInputModule,\n  NbButtonModule,\n  NbIconModule,\n} from '@nebular/theme';\nimport { NgxaThemeModule } from '@xaphira/ngxa-theme';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AUTH_INDEXED_DB, PROFILE_INDEXED_DB, SETTINGS_INDEXED_DB, USER_INFO } from '@xaphira/shared';\nimport { AuthGuardService } from '../services/auth-guard.service';\nimport { UnauthorizeGuardService } from '../services/unauth-guard.service';\nimport { AuthTokenService } from '../services/auth-token.service';\nimport { AuthGuardChildService } from '../services/auth-guard-child.service';\nimport { LoginPageComponent } from './login/login-page.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { NgxaAuthRoutingModule } from './ngxa-auth-routing.module';\nimport { NgxaLayoutAuthModule } from '../layout/ngxa-layout-auth.module';\nimport { AuthSignatureService } from '../services/auth-signature.service';\nimport { HttpInterceptorTokenService } from '../services/http-interceptor-token.service';\nimport { HttpInterceptorSignatureService } from '../services/http-interceptor-signature.service';\nimport { HttpInterceptorLangService } from '../services/http-interceptor-lang.service';\nimport { HttpInterceptorErrorService } from '../services/http-interceptor-error.service';\nimport { AuthUserService } from '../services/auth-user.service';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\nimport { ProfileIndexedDBService } from '../storage/profile-indexeddb.service';\nimport { SettingsIndexedDBService } from '../storage/settings-indexeddb.service';\nimport { AuthLanguageService } from '../services/auth-lang.service';\n\nconst AUTH_PROVIDERS = [\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorTokenService, multi: true},\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorSignatureService, multi: true},\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorLangService, multi: true},\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorErrorService, multi: true},\n  { provide: USER_INFO, useClass: AuthUserService },\n  { provide: AUTH_INDEXED_DB, useClass: AuthIndexedDBService },\n  { provide: PROFILE_INDEXED_DB, useClass: ProfileIndexedDBService },\n  { provide: SETTINGS_INDEXED_DB, useClass: SettingsIndexedDBService },\n  AuthGuardService,\n  UnauthorizeGuardService,\n  AuthTokenService,\n  AuthGuardChildService,\n  AuthSignatureService,\n  AuthLanguageService,\n];\n\nconst components = [\n  LoginPageComponent,\n  LogoutComponent,\n];\n\n@NgModule({\n  declarations: [\n    ...components,\n  ],\n  imports: [\n    NbCheckboxModule,\n    NbAlertModule,\n    NbInputModule,\n    NbButtonModule,\n    NbIconModule,\n    CommonModule,\n    FormsModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxaThemeModule,\n    NgxaLayoutAuthModule,\n    NgxaAuthRoutingModule,\n  ],\n  exports: [\n    ...components,\n  ],\n})\nexport class NgxaAuthModule {\n  static forRoot(): ModuleWithProviders {\n    return <ModuleWithProviders>{\n      ngModule: NgxaAuthModule,\n      providers: [\n        ...AUTH_PROVIDERS,\n      ],\n    };\n  }\n}\n","import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'xa-404',\n  styleUrls: ['./404.component.scss'],\n  templateUrl: './404.component.html',\n})\nexport class PageNotFoundComponent {\n\n  constructor(private location: Location) {\n  }\n\n  goToHome() {\n    this.location.back();\n    return;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PageNotFoundComponent } from './404/404.component';\nimport { AuthComponent } from '../layout/auth.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      {\n        path: '404',\n        component: PageNotFoundComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MiscellaneousRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { NbButtonModule, NbCardModule, NbLayoutModule, NbIconModule } from '@nebular/theme';\n\nimport { NgxaThemeModule } from '@xaphira/ngxa-theme';\nimport { CommonModule } from '@angular/common';\nimport { MiscellaneousRoutingModule } from './miscellaneous-routing.module';\nimport { PageNotFoundComponent } from './404/404.component';\nimport { NgxaLayoutAuthModule } from '../layout/ngxa-layout-auth.module';\n\n@NgModule({\n  imports: [\n    NbButtonModule,\n    NbIconModule,\n    CommonModule,\n    NgxaThemeModule,\n    NgxaLayoutAuthModule,\n    MiscellaneousRoutingModule,\n  ],\n  declarations: [\n    PageNotFoundComponent,\n  ],\n})\nexport class MiscellaneousModule { }\n"],"names":["tslib_1.__extends","components","routes"],"mappings":"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"}