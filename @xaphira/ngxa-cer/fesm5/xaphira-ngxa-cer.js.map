{"version":3,"file":"xaphira-ngxa-cer.js","sources":["ng://@xaphira/ngxa-cer/lib/storage/panic-indexeddb.service.ts","ng://@xaphira/ngxa-cer/lib/services/panic.service.ts","ng://@xaphira/ngxa-cer/lib/ngxa-cer.module.ts","ng://@xaphira/ngxa-cer/lib/dashboard/ngxa-dashboard.component.ts","ng://@xaphira/ngxa-cer/lib/dashboard/monitoring/ngxa-cer-monitoring-page.component.ts","ng://@xaphira/ngxa-cer/lib/dashboard/monitoring/preview/ngxa-cer-monitoring-preview.component.ts","ng://@xaphira/ngxa-cer/lib/dashboard/monitoring/detail/prompt/ngxa-fake-report-prompt.component.ts","ng://@xaphira/ngxa-cer/lib/dashboard/monitoring/detail/ngxa-cer-monitoring-detail.component.ts","ng://@xaphira/ngxa-cer/lib/dashboard/ngxa-cer-dashboard-routing.module.ts","ng://@xaphira/ngxa-cer/lib/dashboard/monitoring/slide-out/ngxa-cer-slide-out.component.ts","ng://@xaphira/ngxa-cer/lib/dashboard/monitoring/info/ngxa-cer-monitoring-info.component.ts","ng://@xaphira/ngxa-cer/lib/dashboard/monitoring/detail/datatable/ngxa-cer-datatable.component.ts","ng://@xaphira/ngxa-cer/lib/dashboard/ngxa-cer-dashboard.module.ts","ng://@xaphira/ngxa-cer/lib/fake/ngxa-cer-fake.module.ts","ng://@xaphira/ngxa-cer/lib/reports/ngxa-cer-reports.component.ts","ng://@xaphira/ngxa-cer/lib/reports/services/reports-panic.service.ts","ng://@xaphira/ngxa-cer/lib/reports/emergency/list/ngxa-reports-emergency-list-page.component.ts","ng://@xaphira/ngxa-cer/lib/reports/emergency/detail/preview/ngxa-reports-preview.component.ts","ng://@xaphira/ngxa-cer/lib/reports/emergency/detail/prompt/ngxa-fake-prompt.component.ts","ng://@xaphira/ngxa-cer/lib/reports/emergency/detail/ngxa-reports-emergency-detail.component.ts","ng://@xaphira/ngxa-cer/lib/reports/fake/list/ngxa-reports-fake-list-page.component.ts","ng://@xaphira/ngxa-cer/lib/reports/ngxa-cer-reports-routing.module.ts","ng://@xaphira/ngxa-cer/lib/reports/ngxa-cer-reports.module.ts","ng://@xaphira/ngxa-cer/lib/statistics/ngxa-statistics.component.ts","ng://@xaphira/ngxa-cer/lib/statistics/area/ngxa-cer-statistics-area-page.component.ts","ng://@xaphira/ngxa-cer/lib/statistics/gender/ngxa-cer-statistics-gender-page.component.ts","ng://@xaphira/ngxa-cer/lib/statistics/periode/ngxa-cer-statistics-periode-page.component.ts","ng://@xaphira/ngxa-cer/lib/statistics/ngxa-cer-statistics-routing.module.ts","ng://@xaphira/ngxa-cer/lib/statistics/ngxa-cer-statistics.module.ts"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\nimport { IndexedDBService } from '@xaphira/ngxa-storage';\nimport { IndexedDBFactoryService } from '@xaphira/shared';\nimport { PanicIDB } from '../models/panic.schema';\n\n@Injectable({providedIn : 'root'})\nexport class PanicIndexedDBService extends IndexedDBService<PanicIDB> implements IndexedDBFactoryService {\n\n  constructor(injector: Injector) {\n    super(injector, 'cer', 1, '#cer-panic');\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { PanicFactoryService, PANIC_INDEXED_DB, IndexedDBFactoryService } from '@xaphira/shared';\n\n@Injectable()\nexport class PanicService implements PanicFactoryService {\n\n    private loaderPanicSubject$ = new Subject<string>();\n\n    constructor(@Inject(PANIC_INDEXED_DB) private panicIndexedDB: IndexedDBFactoryService) {\n    }\n\n    public notifyPanic(data: any): void {\n        this.panicIndexedDB.put(data['panicCode'], data).then(() => {\n            this.loaderPanicSubject$.next(data['panicCode']);\n        });\n    }\n\n    public putAllPanic(datas: any[]): void {\n        datas.forEach(data => {\n            this.panicIndexedDB.put(data['panicCode'], data).then();\n        });\n    }\n\n    public clearAllPanic(): Promise<void> {\n        return this.panicIndexedDB.clearAll();\n    }\n\n    public getPanic(panicCode: string): Promise<any> {\n        return this.panicIndexedDB.get(panicCode);\n    }\n\n    public getAllPanic(): Observable<any[]> {\n        return this.panicIndexedDB.getAllOf();\n    }\n\n    public onCheckPanic(): Observable<string> {\n        return this.loaderPanicSubject$.asObservable();\n    }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PANIC_INDEXED_DB, PANIC } from '@xaphira/shared';\nimport { PanicIndexedDBService } from './storage/panic-indexeddb.service';\nimport { PanicService } from './services/panic.service';\n\nconst CER_PROVIDERS = [\n  { provide: PANIC_INDEXED_DB, useClass: PanicIndexedDBService },\n  { provide: PANIC, useClass: PanicService },\n  PanicIndexedDBService,\n  PanicService,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  exports: [],\n  declarations: [],\n})\nexport class NgxaCerModule {\n\n  static forRoot(): ModuleWithProviders {\n    return <ModuleWithProviders>{\n      ngModule: NgxaCerModule,\n      providers: [\n        ...CER_PROVIDERS,\n      ],\n    };\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'xa-cer-dashboard',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class NgxaDashboardComponent {\n}\n","import { Component, OnInit, OnDestroy, Inject, Injector } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { LeafletModel } from '@xaphira/ngxa-common';\nimport { PANIC, PanicFactoryService, HttpFactoryService, HTTP_SERVICE, API, APIModel } from '@xaphira/shared';\n\n@Component({\n  selector: 'xa-cer-monitoring',\n  styleUrls: ['./ngxa-cer-monitoring-page.component.scss'],\n  templateUrl: './ngxa-cer-monitoring-page.component.html',\n})\nexport class NgxaCerMonitoringPageComponent implements OnInit, OnDestroy {\n\n  public showInfo: boolean = false;\n  public markers: LeafletModel[];\n  public markerSelected: LeafletModel;\n  private destroy$: Subject<void> = new Subject<void>();\n  private http: HttpFactoryService;\n  private api: APIModel;\n\n  constructor(injector: Injector, @Inject(PANIC) private panicService: PanicFactoryService) {\n    this.http = injector.get(HTTP_SERVICE);\n    this.api = injector.get(API);\n    this.panicService.onCheckPanic()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.getAllPanicStorage();\n    });\n  }\n\n  ngOnInit(): void {\n    this.getAllPanicServer();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private getAllPanicServer(): void {\n    this.http.HTTP_AUTH(this.api['panic']['get-allpanic']).subscribe((values: any[]) => {\n      const temps: any[] = [];\n      values.forEach((data: any) => {\n        temps.push({\n          mark: [\n            data['latestLatitude'], data['latestLongitude'],\n          ],\n          title: data['name'],\n          alt: data['panicCode'],\n          className: 'pulse',\n        });\n      });\n      this.markers = temps;\n      try {\n        this.panicService.clearAllPanic().then(() => {\n          if (values.length) {\n            this.panicService.putAllPanic(values);\n          }\n        });\n      } catch (error) {}\n    });\n  }\n\n  private getAllPanicStorage(): void {\n    this.panicService.getAllPanic().subscribe((values: any[]) => {\n      const temps: any[] = [];\n      values.forEach((data: any) => {\n        temps.push({\n          mark: [\n            data['latestLatitude'], data['latestLongitude'],\n          ],\n          title: data['name'],\n          alt: data['panicCode'],\n          className: 'pulse',\n        });\n      });\n      this.markers = temps;\n    });\n  }\n\n  public onMarker(data: LeafletModel): void {\n    this.markerSelected = data;\n    this.showInfo = true;\n  }\n\n  public onToggleInfo(showInfo: boolean): void {\n    this.showInfo = showInfo;\n  }\n\n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { APIModel, API, HTTP_SERVICE, HttpFactoryService } from '@xaphira/shared';\nimport { tap } from 'rxjs/operators';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'xa-cer-monitoring-preview',\n  templateUrl: './ngxa-cer-monitoring-preview.component.html',\n  styleUrls: ['ngxa-cer-monitoring-preview.component.scss'],\n})\nexport class NgxaCerMonitoringPreviewComponent implements OnInit {\n\n  @Input() public url: any;\n  @Input() public checksum: any;\n  @Input() public user: any;\n  @Input() public fileType: any;\n\n  constructor(\n    @Inject(API)private apiPath: APIModel,\n    @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n    public sanitizer: DomSanitizer) {}\n\n  ngOnInit(): void {\n    this.getEvidence(this.checksum, this.user, this.fileType);\n  }\n\n  private getEvidence(checksum: any, user: string, fileType: string) {\n    this.httpBaseService.HTTP_AUTH(\n    this.apiPath['file']['evidence'], null, null, null,\n    [checksum, user], 'arraybuffer')\n    .pipe(tap((response: any) => {\n        const fileBlob: Blob = new Blob([response], {\n          type: fileType,\n        });\n        const reader: FileReader = new FileReader();\n        reader.readAsDataURL(fileBlob);\n        reader.onloadend = () => {\n          this.url = this.sanitizer.bypassSecurityTrustUrl(reader.result.toString());\n        };\n    })).subscribe();\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\n\n@Component({\n  selector: 'xa-fake-report-prompt',\n  templateUrl: './ngxa-fake-report-prompt.component.html',\n  styleUrls: ['ngxa-fake-report-prompt.component.scss'],\n})\nexport class NgxaFakeReportPromptComponent {\n\n  public disabled: boolean = false;\n  public password: string;\n\n  constructor(protected ref: NbDialogRef<NgxaFakeReportPromptComponent>) {\n  }\n\n  submit(password) {\n    this.disabled = true;\n    this.ref.close(password);\n  }\n}\n","import { Component, Inject, OnInit, OnDestroy, Injector } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NbDialogService } from '@nebular/theme';\nimport { EncryptionService } from '@xaphira/utils';\nimport { BaseFilterComponent, DatatableColumn, Sort, SelectParamModel } from '@xaphira/ngxa-common';\nimport {\n  PANIC,\n  PanicFactoryService,\n  HttpBaseModel,\n  ApiBaseResponse,\n  SecurityResourceModel,\n  ResponseCode,\n  OAUTH_INFO,\n} from '@xaphira/shared';\nimport { NgxaCerMonitoringPreviewComponent } from '../preview/ngxa-cer-monitoring-preview.component';\nimport { NgxaFakeReportPromptComponent } from './prompt/ngxa-fake-report-prompt.component';\n\n@Component({\n  selector: 'xa-cer-monitoring-detail',\n  templateUrl: './ngxa-cer-monitoring-detail.component.html',\n  styleUrls: ['ngxa-cer-monitoring-detail.component.scss'],\n})\nexport class NgxaCerMonitoringDetailComponent extends BaseFilterComponent<any> implements OnInit, OnDestroy {\n\n  public profile: any = {};\n  public image: string;\n  public imageDefault: string = `${document.getElementsByTagName('base')[0].href}/assets/images/avatars/default.png`;\n\n  public apiPath: HttpBaseModel;\n  public columns: DatatableColumn[] = [\n    { name: 'Evidence', prop: 'fileMetadata', width: 100, frozenLeft: true, type: 'button',\n      button: 'Preview', buttonStatus: 'warning' },\n    { name: 'File Size', prop: 'fileMetadata.size', width: 125, frozenLeft: true, type: 'prefix',\n      prefix: 'bytes' },\n    { name: 'Latitude', prop: 'location.latitude', width: 125, frozenLeft: true },\n    { name: 'Longitude', prop: 'location.longitude', width: 125, frozenLeft: true },\n    { name: 'Address', prop: 'location.formattedAddress', width: 350 },\n    { name: 'Province', prop: 'location.province', width: 150 },\n    { name: 'City', prop: 'location.city', width: 150 },\n    { name: 'District', prop: 'location.district', width: 150 },\n    { name: 'Device ID', prop: 'device.deviceID', width: 150 },\n    { name: 'Device Name', prop: 'device.deviceName', width: 150 },\n  ];\n  public sort: Sort = {\n    'desc': ['createdDate'],\n  };\n  public apiSelectParameter: HttpBaseModel;\n  public paramSelectStatus: SelectParamModel[];\n  public paramSelectEmergency: SelectParamModel[];\n  public disabledFake: boolean;\n  private panicCode: string;\n  private username: string;\n  private oauthResource: SecurityResourceModel;\n  private enc: EncryptionService;\n\n  constructor(public injector: Injector, private router: Router,\n    private route: ActivatedRoute, @Inject(PANIC) private panicService: PanicFactoryService,\n    private dialogService: NbDialogService) {\n    super(injector, null,\n      {\n        'status': [],\n        'emergencyCategory': [],\n      });\n    this.enc = injector.get(EncryptionService);\n    this.oauthResource = injector.get(OAUTH_INFO);\n    this.apiSelectParameter = this.api['master']['select-parameter'];\n    if (this.route.snapshot.params['code']) {\n      this.panicCode = this.route.snapshot.params['code'];\n      this.keyword = {\n        panicCode: this.panicCode,\n      };\n    } else {\n      this.router.navigate(['/app/dashboard']);\n    }\n    this.apiPath = this.api['panic']['datatable-panic-detail'];\n  }\n\n  ngOnDestroy(): void {}\n\n  ngOnInit(): void {\n    this.onInit('security', 'get-profile-personal');\n    this.paramSelectStatus = [{\n      key: 'parameterGroupCode',\n      value: 'STATUS_EMERGENCY',\n    }];\n    this.paramSelectEmergency = [{\n      key: 'parameterGroupCode',\n      value: 'CATEGORY_EMERGENCY',\n    }];\n  }\n\n  onInit(serviceName: string, apiName: string): void {\n    this.panicService.getPanic(this.panicCode).then((value: any) => {\n      this.loadingForm = true;\n      this.username = value.username;\n      const data: any = {\n        username: value.username,\n      };\n      this.exec(serviceName, apiName, data)\n        .subscribe(\n          (success: any) => {\n            this.loadingForm = false;\n            this.profile = success;\n            if (success['image']) {\n              this.image = success['image'];\n            }\n          },\n          (error: HttpErrorResponse) => {\n            this.loadingForm = true;\n            const err: ApiBaseResponse = error['error'];\n            if (err) {\n              this.toastr.showI18n(err.respStatusMessage[err.respStatusCode], true, null, 'danger');\n            } else {\n              this.toastr.showI18n(err as any, true, null, 'danger');\n            }\n          },\n        );\n    });\n  }\n\n  valueSelect(prop: string): string {\n    if (this.formGroup.get(prop).value) {\n      if (this.formGroup.get(prop).value.value) {\n        return this.formGroup.get(prop).value.value;\n      } else {\n        return this.formGroup.get(prop).value;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  onPreview(data: any): void {\n    this.dialogService.open(NgxaCerMonitoringPreviewComponent, {\n      context: {\n        checksum: data['checksum'],\n        user: this.username,\n        fileType: data['fileType'],\n      },\n    });\n  }\n\n  onFake(): void {\n    this.dialogService.open(NgxaFakeReportPromptComponent)\n      .onClose.subscribe((password: string) => {\n        if (password) {\n          this.disabledFake = true;\n          const data: any = {\n            password: this.enc.encryptAES(this.oauthResource['aes_key'], password),\n            panicCode: this.panicCode,\n          };\n          (super.onSubmit(data, 'panic', 'fake-report') as Observable<ApiBaseResponse>)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((response: ApiBaseResponse) => {\n              if (response) {\n                if (response.respStatusCode === ResponseCode.OK_SCR011.toString()) {\n                  this.router.navigate(['/app/dashboard']);\n                }\n              }\n            });\n        } else {\n          this.disabledFake = false;\n        }\n      });\n  }\n\n  onProcess(): void {\n    const data: any = {\n      panicCode: this.panicCode,\n      status: this.valueSelect('status'),\n      emergencyCategory: this.valueSelect('emergencyCategory'),\n    };\n    (super.onSubmit(data, 'panic', 'process-report') as Observable<ApiBaseResponse>)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((response: ApiBaseResponse) => {\n        if (response) {\n          if (response.respStatusCode === ResponseCode.OK_UPDATED.toString()) {\n            this.router.navigate(['/app/dashboard']);\n          }\n        }\n      });\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuardChildService } from '@xaphira/ngxa-auth';\nimport { NgxaDashboardComponent } from './ngxa-dashboard.component';\nimport { NgxaCerMonitoringPageComponent } from './monitoring/ngxa-cer-monitoring-page.component';\nimport { NgxaCerMonitoringDetailComponent } from './monitoring/detail/ngxa-cer-monitoring-detail.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: NgxaDashboardComponent,\n  canActivateChild: [AuthGuardChildService],\n  children: [\n    {\n      path: '',\n      component: NgxaCerMonitoringPageComponent,\n      data: {\n        code: '#DASHBOARD-PAGE',\n      },\n    },\n    {\n      path: 'details/:code',\n      component: NgxaCerMonitoringDetailComponent,\n      data: {\n        code: '#DASHBOARD-PAGE',\n      },\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NgxaCerDashboardRoutingModule {\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'xa-cer-slide-out',\n  styleUrls: ['./ngxa-cer-slide-out.component.scss'],\n  templateUrl: './ngxa-cer-slide-out.component.html',\n})\nexport class NgxaCerSlideOutComponent {\n\n  @Input() public showInfo: boolean = false;\n  @Output() public onToggle: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  toggleDetail() {\n    this.showInfo = !this.showInfo;\n    this.onToggle.emit(this.showInfo);\n  }\n}\n","import { Component, Input, Inject, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NbDialogService } from '@nebular/theme';\nimport { LeafletModel } from '@xaphira/ngxa-common';\nimport { PANIC, PanicFactoryService } from '@xaphira/shared';\nimport { NgxaCerMonitoringPreviewComponent } from '../preview/ngxa-cer-monitoring-preview.component';\n\n@Component({\n  selector: 'xa-cer-monitoring-info',\n  templateUrl: './ngxa-cer-monitoring-info.component.html',\n  styleUrls: ['ngxa-cer-monitoring-info.component.scss'],\n})\nexport class NgxaCerMonitoringInfoComponent implements OnInit {\n\n  @Input() public set markerFn(marker: LeafletModel) {\n    if (marker) {\n      this.panicService.getPanic(marker.alt).then((value: any) => {\n        this.data = value;\n      });\n    }\n  }\n  public marker: LeafletModel = { mark: [0,0]};\n  public data: any = {};\n\n  constructor(private router: Router, @Inject(PANIC) private panicService: PanicFactoryService,\n    private dialogService: NbDialogService) {}\n\n  ngOnInit(): void {\n  }\n\n  public onViewDetails(): void {\n    this.router.navigate(['/app/dashboard/details', this.data['panicCode']]);\n  }\n\n  onPreview(): void {\n    this.dialogService.open(NgxaCerMonitoringPreviewComponent, {\n      context: {\n        checksum: this.data['fileMetadata']['checksum'],\n        user: this.data['username'],\n        fileType: this.data['fileMetadata']['fileType'],\n      },\n    });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  Inject,\n  LOCALE_ID,\n  Injector,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  ChangeDetectorRef,\n  ViewChild,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { Subject, Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { ColumnMode, SelectionType, SortType, DatatableComponent } from '@swimlane/ngx-datatable';\nimport { DatatableColumn, Page, DatatableFilter, Keyword, Sort } from '@xaphira/ngxa-common';\nimport { LayoutService } from '@xaphira/ngxa-theme';\nimport { HttpFactoryService, HTTP_SERVICE, HttpBaseModel } from '@xaphira/shared';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'xa-cer-datatable',\n  styleUrls: ['./ngxa-cer-datatable.component.scss'],\n  templateUrl: './ngxa-cer-datatable.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgxaCerDatatableComponent implements OnInit, OnDestroy {\n  @Input() rows: any[] = [];\n  @Input() columns: DatatableColumn[] = [];\n  @Input() filters: DatatableFilter[] = [];\n  @Input() selected: any[] = [];\n  @Input() limit: number | undefined = 10;\n  @Input() count: number = 0;\n  @Input() offset: number = 0;\n  @Input() externalPaging: boolean = false;\n  @Input() externalSorting: boolean = false;\n  @Input() loadingIndicator: boolean = false;\n  @Input() scrollbarH: boolean = true;\n  @Input() scrollbarV: boolean = false;\n  @Input() reorderable: boolean = true;\n  @Input() sortType: SortType = SortType.single;\n  @Input() messages: any;\n  @Input() selectionType: SelectionType;\n  @Input() columnMode: ColumnMode = ColumnMode.force;\n  @Input() headerHeight: any = 40;\n  @Input() footerHeight: any = 'auto';\n  @Input() rowHeight: number | 'auto' | ((row?: any) => number) = 'auto';\n  @Input() column: boolean = true;\n  @Input() footer: boolean = true;\n  @Input() api: HttpBaseModel;\n  @Input() startWithOpenData: boolean = true;\n  @Input() filterEvent: boolean = false;\n  @Input() formGroupFilter: FormGroup;\n  @Output() buttonCell: EventEmitter<any> = new EventEmitter<any>();\n  @Output() select: EventEmitter<any> = new EventEmitter<any>();\n  @Output() activate: EventEmitter<any> = new EventEmitter<any>();\n  @ViewChild('datatable', {static: false}) datatable: DatatableComponent;\n  @Input() set filterFn(keyword: Keyword) {\n    this.keywordParam = keyword;\n    this._keyword = keyword;\n    this.count = 0;\n    this.offset = 0;\n  }\n\n  public keywordParam: Keyword;\n  public _keyword: Keyword;\n  protected http: HttpFactoryService;\n  private destroy$: Subject<any> = new Subject<any>();\n  private cdref: ChangeDetectorRef;\n  private sort: Sort;\n  private pageOffset: number = 0;\n\n  constructor(@Inject(LOCALE_ID) public locale: string,\n    private layout: LayoutService,\n    public injector: Injector) {\n      this.http = injector.get(HTTP_SERVICE);\n      this.cdref = injector.get(ChangeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    if (this.startWithOpenData) {\n      this.fetch();\n    }\n    this.layout.onChangeLayoutSize().takeUntil(this.destroy$).subscribe(() => {\n      this.datatable.recalculate();\n      this.cdref.detectChanges();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n  fetch(): void {\n    if (this.api) {\n      this.externalPaging = true;\n      this.externalSorting = true;\n      this.getRequest().subscribe(rows => {\n        this.rows = rows;\n        this.cdref.detectChanges();\n      });\n    }\n  }\n\n  onSort(order: any): void {\n    if (order) {\n      if (Array.isArray(order.sorts)) {\n        order.sorts.forEach(sort => {\n          if (sort['dir'] === 'asc') {\n            this.sort = { asc : [sort['prop']]};\n          } else {\n            this.sort = { desc : [sort['prop']]};\n          }\n        });\n      }\n    }\n    this.fetch();\n  }\n\n  onSelect(selected: any): void {\n    this.select.emit(selected);\n  }\n\n  onActivate(event: any): void {\n    if (event.type === 'click') {\n      if (this.selectionType === 'checkbox') {\n        if (event.cellIndex > 0) {\n          this.activate.emit(event.row);\n        }\n      } else {\n        this.activate.emit(event.row);\n      }\n    }\n  }\n\n  setPage(page: Page): void {\n    this.pageOffset = page.offset * this.limit;\n    this.fetch();\n  }\n\n  sanitizedValue(value: any): any {\n    return value !== null && value !== undefined ? this.stripHtml(value) : value;\n  }\n\n  stripHtml(html: string): string {\n    if (!html.replace) {\n      return html;\n    }\n    return html.replace(/<\\/?[^>]+(>|$)/g, '');\n  }\n\n  onClickButton(event): void {\n    this.buttonCell.emit(event);\n  }\n\n  private getRequest(): Observable<any[]> {\n    const body: any = {\n      offset: this.pageOffset,\n      limit: this.limit,\n      keyword : this._keyword,\n      order: this.sort,\n    };\n    this.loadingIndicator = true;\n    return this.http.HTTP_AUTH(this.api, body)\n      .pipe(\n        map((response: any) => {\n          this.count = Number(response.totalRecord);\n          this.loadingIndicator = false;\n          return (<any[]> response['data']);\n        }),\n        catchError(() => {\n          this.loadingIndicator = false;\n          this.count = 0;\n          return of([]);\n        }));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NbCardModule, NbAlertModule, NbIconModule, NbDialogModule, NbWindowModule } from '@nebular/theme';\nimport { NgxaThemeModule } from '@xaphira/ngxa-theme';\nimport {\n  NgxaInputModule,\n  NgxaCheckBoxModule,\n  NgxaButtonModule,\n  NgxaBaseModule,\n  NgxaSelectModule,\n  NgxaMapsModule,\n  NgxaTableModule,\n  NgxaLabelModule,\n} from '@xaphira/ngxa-common';\nimport { NgxaCerDashboardRoutingModule } from './ngxa-cer-dashboard-routing.module';\nimport { NgxaCerMonitoringPageComponent } from './monitoring/ngxa-cer-monitoring-page.component';\nimport { NgxaCerMonitoringDetailComponent } from './monitoring/detail/ngxa-cer-monitoring-detail.component';\nimport { NgxaCerSlideOutComponent } from './monitoring/slide-out/ngxa-cer-slide-out.component';\nimport { NgxaCerMonitoringInfoComponent } from './monitoring/info/ngxa-cer-monitoring-info.component';\nimport { NgxaDashboardComponent } from './ngxa-dashboard.component';\nimport { NgxaCerDatatableComponent } from './monitoring/detail/datatable/ngxa-cer-datatable.component';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { NgxaCerMonitoringPreviewComponent } from './monitoring/preview/ngxa-cer-monitoring-preview.component';\nimport { NgxaFakeReportPromptComponent } from './monitoring/detail/prompt/ngxa-fake-report-prompt.component';\n\nconst components = [\n  NgxaDashboardComponent,\n  NgxaCerMonitoringPageComponent,\n  NgxaCerMonitoringInfoComponent,\n  NgxaCerSlideOutComponent,\n  NgxaCerDatatableComponent,\n  NgxaCerMonitoringDetailComponent,\n  NgxaCerMonitoringPreviewComponent,\n  NgxaFakeReportPromptComponent,\n];\n\nconst modules = [\n  FormsModule,\n  ReactiveFormsModule,\n  NbCardModule,\n  NbAlertModule,\n  NbIconModule,\n  NbDialogModule.forChild(),\n  NbWindowModule.forChild(),\n  NgxaThemeModule,\n  NgxaInputModule,\n  NgxaCheckBoxModule,\n  NgxaButtonModule,\n  NgxaBaseModule,\n  NgxaSelectModule,\n  NgxaMapsModule,\n  NgxDatatableModule,\n  NgxaTableModule,\n  NgxaLabelModule,\n  NgxaCerDashboardRoutingModule,\n];\n\nconst providers = [\n];\n\nconst entryComponents = [\n  NgxaCerMonitoringPreviewComponent,\n  NgxaFakeReportPromptComponent,\n];\n\n@NgModule({\n  imports: [\n    ...modules,\n  ],\n  declarations: [\n    ...components,\n  ],\n  providers: [\n    ...providers,\n  ],\n  entryComponents: [\n    ...entryComponents,\n  ],\n})\nexport class NgxaCerDashboardModule { }\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [\n  ],\n  exports: [],\n})\nexport class NgxaCerFakeModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'xa-cer-report',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class NgxaCerReportsComponent {\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ReportsPanicService {\n\n    private reports: any;\n\n    public getReports(): any {\n        return this.reports;\n    }\n\n    public setReports(reports: any) {\n        this.reports = reports;\n    }\n\n}\n","import { Component, OnInit, Injector, OnDestroy } from '@angular/core';\nimport { SelectionType } from '@swimlane/ngx-datatable';\nimport { Router } from '@angular/router';\nimport { HttpBaseModel } from '@xaphira/shared';\nimport { BaseFilterComponent } from '@xaphira/ngxa-common';\nimport { DatatableColumn } from '@xaphira/ngxa-common';\nimport { ReportsPanicService } from '../../services/reports-panic.service';\n\n@Component({\n  selector: 'xa-reports-emergency-list-page',\n  styleUrls: ['./ngxa-reports-emergency-list-page.component.scss'],\n  templateUrl: './ngxa-reports-emergency-list-page.component.html',\n})\nexport class NgxaReportsEmergencyListPageComponent extends BaseFilterComponent<any> implements OnInit, OnDestroy {\n\n  public apiPath: HttpBaseModel;\n  public selectionType: SelectionType = SelectionType.single;\n  public columns: DatatableColumn[] = [\n    { name: 'Name', prop: 'name', width: 225, frozenLeft: true},\n    { name: 'Address', prop: 'latestFormattedAddress', width: 275, frozenLeft: true},\n    { name: 'Gender', prop: 'gender', width: 125, frozenLeft: true },\n    { name: 'Phone Number', prop: 'phoneNumber', width: 140, frozenLeft: true },\n    { name: 'Emergency Category', prop: 'emergencyCategory' },\n    { name: 'Status', prop: 'status' },\n    { name: 'Created', prop: 'createdBy' },\n    { name: 'Created Date', prop: 'createdDate' },\n    { name: 'Modified', prop: 'modifiedBy' },\n    { name: 'Modified Date', prop: 'modifiedDate' },\n    { name: 'Active', prop: 'active' },\n  ];\n  public expanded: boolean = false;\n\n  constructor(public injector: Injector, private router: Router, private reportService: ReportsPanicService) {\n    super(injector, {\n      'fullname': [],\n      'phoneNumber': [],\n      'latestFormattedAddress': [],\n    });\n    this.apiPath = this.api['panic']['datatable-panic-reports'];\n    this.filters = [\n      { controlName: 'fullname', type: 'input' },\n      { controlName: 'phoneNumber', type: 'input' },\n      { controlName: 'latestFormattedAddress', type: 'input' }];\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {}\n\n  onViewDetail(data): void {\n    this.reportService.setReports(data);\n    this.router.navigate(['/app/reports/emergency/detail']);\n  }\n\n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { APIModel, API, HTTP_SERVICE, HttpFactoryService } from '@xaphira/shared';\nimport { tap } from 'rxjs/operators';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'xa-reports-preview',\n  templateUrl: './ngxa-reports-preview.component.html',\n  styleUrls: ['ngxa-reports-preview.component.scss'],\n})\nexport class NgxaReportsPreviewComponent implements OnInit {\n\n  @Input() public url: any;\n  @Input() public checksum: any;\n  @Input() public user: any;\n  @Input() public fileType: any;\n\n  constructor(\n    @Inject(API)private apiPath: APIModel,\n    @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n    public sanitizer: DomSanitizer) {}\n\n  ngOnInit(): void {\n    this.getEvidence(this.checksum, this.user, this.fileType);\n  }\n\n  private getEvidence(checksum: any, user: string, fileType: string) {\n    this.httpBaseService.HTTP_AUTH(\n    this.apiPath['file']['evidence'], null, null, null,\n    [checksum, user], 'arraybuffer')\n    .pipe(tap((response: any) => {\n        const fileBlob: Blob = new Blob([response], {\n          type: fileType,\n        });\n        const reader: FileReader = new FileReader();\n        reader.readAsDataURL(fileBlob);\n        reader.onloadend = () => {\n          this.url = this.sanitizer.bypassSecurityTrustUrl(reader.result.toString());\n        };\n    })).subscribe();\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\n\n@Component({\n  selector: 'xa-fake-prompt',\n  templateUrl: './ngxa-fake-prompt.component.html',\n  styleUrls: ['ngxa-fake-prompt.component.scss'],\n})\nexport class NgxaFakePromptComponent {\n\n  public disabled: boolean = false;\n  public password: string;\n\n  constructor(protected ref: NbDialogRef<NgxaFakePromptComponent>) {\n  }\n\n  submit(password) {\n    this.disabled = true;\n    this.ref.close(password);\n  }\n}\n","import { Component, Inject, OnInit, OnDestroy, Injector } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NbDialogService } from '@nebular/theme';\nimport { EncryptionService } from '@xaphira/utils';\nimport { BaseFilterComponent, DatatableColumn, Sort, SelectParamModel } from '@xaphira/ngxa-common';\nimport {\n  PANIC,\n  PanicFactoryService,\n  HttpBaseModel,\n  ApiBaseResponse,\n  SecurityResourceModel,\n  ResponseCode,\n  OAUTH_INFO,\n} from '@xaphira/shared';\nimport { NgxaReportsPreviewComponent } from './preview/ngxa-reports-preview.component';\nimport { NgxaFakePromptComponent } from './prompt/ngxa-fake-prompt.component';\nimport { ReportsPanicService } from '../../services/reports-panic.service';\n\n@Component({\n  selector: 'xa-reports-emergency-detail.component',\n  templateUrl: './ngxa-reports-emergency-detail.component.html',\n  styleUrls: ['ngxa-reports-emergency-detail.component.scss'],\n})\nexport class NgxaReportsEmergencyDetailComponent extends BaseFilterComponent<any> implements OnInit, OnDestroy {\n\n  public profile: any = {};\n  public image: string;\n  public imageDefault: string = `${document.getElementsByTagName('base')[0].href}/assets/images/avatars/default.png`;\n\n  public apiPath: HttpBaseModel;\n  public columns: DatatableColumn[] = [\n    { name: 'Evidence', prop: 'fileMetadata', width: 100, frozenLeft: true, type: 'button',\n      button: 'Preview', buttonStatus: 'warning' },\n    { name: 'File Size', prop: 'fileMetadata.size', width: 125, frozenLeft: true, type: 'prefix',\n      prefix: 'bytes' },\n    { name: 'Latitude', prop: 'location.latitude', width: 125, frozenLeft: true },\n    { name: 'Longitude', prop: 'location.longitude', width: 125, frozenLeft: true },\n    { name: 'Address', prop: 'location.formattedAddress', width: 350 },\n    { name: 'Province', prop: 'location.province', width: 150 },\n    { name: 'City', prop: 'location.city', width: 150 },\n    { name: 'District', prop: 'location.district', width: 150 },\n    { name: 'Device ID', prop: 'device.deviceID', width: 150 },\n    { name: 'Device Name', prop: 'device.deviceName', width: 150 },\n  ];\n  public sort: Sort = {\n    'desc': ['createdDate'],\n  };\n  public apiSelectParameter: HttpBaseModel;\n  public paramSelectStatus: SelectParamModel[];\n  public paramSelectEmergency: SelectParamModel[];\n  public disabledFake: boolean;\n  private username: string;\n  private oauthResource: SecurityResourceModel;\n  private enc: EncryptionService;\n  private dataReport: any;\n\n  constructor(public injector: Injector, private router: Router,\n    private route: ActivatedRoute,\n    private dialogService: NbDialogService, private reportService: ReportsPanicService) {\n    super(injector, null,\n      {\n        'status': [],\n        'emergencyCategory': [],\n      });\n    this.enc = injector.get(EncryptionService);\n    this.oauthResource = injector.get(OAUTH_INFO);\n    this.apiSelectParameter = this.api['master']['select-parameter'];\n    this.dataReport = this.reportService.getReports();\n    this.keyword = {\n      panicCode: this.dataReport['panicCode'],\n    };\n    this.username = this.dataReport['username'],\n    this.apiPath = this.api['panic']['datatable-panic-detail'];\n  }\n\n  ngOnDestroy(): void {}\n\n  ngOnInit(): void {\n    this.onInit('security', 'get-profile-personal');\n    this.paramSelectStatus = [{\n      key: 'parameterGroupCode',\n      value: 'STATUS_EMERGENCY',\n    }];\n    this.paramSelectEmergency = [{\n      key: 'parameterGroupCode',\n      value: 'CATEGORY_EMERGENCY',\n    }];\n  }\n\n  onInit(serviceName: string, apiName: string): void {\n    this.loadingForm = true;\n    const data: any = {\n      username: this.username,\n    };\n    this.exec(serviceName, apiName, data)\n      .subscribe(\n        (success: any) => {\n          this.loadingForm = false;\n          this.profile = success;\n          if (success['image']) {\n            this.image = success['image'];\n          }\n        },\n        (error: HttpErrorResponse) => {\n          this.loadingForm = true;\n          const err: ApiBaseResponse = error['error'];\n          if (err) {\n            this.toastr.showI18n(err.respStatusMessage[err.respStatusCode], true, null, 'danger');\n          } else {\n            this.toastr.showI18n(err as any, true, null, 'danger');\n          }\n        },\n      );\n  }\n\n  valueSelect(prop: string): string {\n    if (this.formGroup.get(prop).value) {\n      if (this.formGroup.get(prop).value.value) {\n        return this.formGroup.get(prop).value.value;\n      } else {\n        return this.formGroup.get(prop).value;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  onPreview(data: any): void {\n    this.dialogService.open(NgxaReportsPreviewComponent, {\n      context: {\n        checksum: data['checksum'],\n        user: this.username,\n        fileType: data['fileType'],\n      },\n    });\n  }\n\n  onFake(): void {\n    this.dialogService.open(NgxaFakePromptComponent)\n      .onClose.subscribe((password: string) => {\n        if (password) {\n          this.disabledFake = true;\n          const data: any = {\n            password: this.enc.encryptAES(this.oauthResource['aes_key'], password),\n            panicCode: this.dataReport['panicCode'],\n          };\n          (super.onSubmit(data, 'panic', 'fake-report') as Observable<ApiBaseResponse>)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((response: ApiBaseResponse) => {\n              if (response) {\n                if (response.respStatusCode === ResponseCode.OK_SCR011.toString()) {\n                  this.router.navigate(['/app/dashboard']);\n                }\n              }\n            });\n        } else {\n          this.disabledFake = false;\n        }\n      });\n  }\n\n  onProcess(): void {\n    const data: any = {\n      panicCode: this.dataReport['panicCode'],\n      status: this.valueSelect('status'),\n      emergencyCategory: this.valueSelect('emergencyCategory'),\n    };\n    (super.onSubmit(data, 'panic', 'process-report') as Observable<ApiBaseResponse>)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((response: ApiBaseResponse) => {\n        if (response) {\n          if (response.respStatusCode === ResponseCode.OK_UPDATED.toString()) {\n            this.router.navigate(['/app/dashboard']);\n          }\n        }\n      });\n\n  }\n\n}\n","import { Component, OnInit, Injector, OnDestroy } from '@angular/core';\nimport { SelectionType } from '@swimlane/ngx-datatable';\nimport { Router } from '@angular/router';\nimport { HttpBaseModel } from '@xaphira/shared';\nimport { BaseFilterComponent } from '@xaphira/ngxa-common';\nimport { DatatableColumn } from '@xaphira/ngxa-common';\nimport { ReportsPanicService } from '../../services/reports-panic.service';\n\n@Component({\n  selector: 'xa-reports-fake-list-page',\n  styleUrls: ['./ngxa-reports-fake-list-page.component.scss'],\n  templateUrl: './ngxa-reports-fake-list-page.component.html',\n})\nexport class NgxaReportsFakeListPageComponent extends BaseFilterComponent<any> implements OnInit, OnDestroy {\n\n  public apiPath: HttpBaseModel;\n  public selectionType: SelectionType = SelectionType.single;\n  public columns: DatatableColumn[] = [\n    { name: 'Username', prop: 'username', width: 125, frozenLeft: true},\n    { name: 'Name', prop: 'name', width: 225, frozenLeft: true},\n    { name: 'Address', prop: 'latestFormattedAddress', width: 275, frozenLeft: true},\n    { name: 'Gender', prop: 'gender', width: 125, frozenLeft: true },\n    { name: 'Phone Number', prop: 'phoneNumber', width: 140, frozenLeft: true },\n    { name: 'Created', prop: 'createdBy' },\n    { name: 'Created Date', prop: 'createdDate' },\n    { name: 'Modified', prop: 'modifiedBy' },\n    { name: 'Modified Date', prop: 'modifiedDate' },\n    { name: 'Active', prop: 'active' },\n  ];\n  public expanded: boolean = false;\n\n  constructor(public injector: Injector, private router: Router, private reportService: ReportsPanicService) {\n    super(injector, {\n      'fullname': [],\n      'phoneNumber': [],\n      'latestFormattedAddress': [],\n    });\n    this.apiPath = this.api['panic']['datatable-fake-reports'];\n    this.filters = [\n      { controlName: 'fullname', type: 'input' },\n      { controlName: 'phoneNumber', type: 'input' },\n      { controlName: 'latestFormattedAddress', type: 'input' }];\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {}\n\n  onViewDetail(data): void {\n    this.reportService.setReports(data);\n    this.router.navigate(['/app/reports/fake/detail']);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuardChildService } from '@xaphira/ngxa-auth';\nimport { NgxaCerReportsComponent } from './ngxa-cer-reports.component';\nimport { NgxaReportsEmergencyListPageComponent } from './emergency/list/ngxa-reports-emergency-list-page.component';\nimport {\n  NgxaReportsEmergencyDetailComponent,\n} from './emergency/detail/ngxa-reports-emergency-detail.component';\nimport { NgxaReportsFakeListPageComponent } from './fake/list/ngxa-reports-fake-list-page.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: NgxaCerReportsComponent,\n  canActivateChild: [AuthGuardChildService],\n  children: [\n    {\n      path: 'emergency',\n      component: NgxaReportsEmergencyListPageComponent,\n      data: {\n        code: '#EMERGENCY-REPORTS-PAGE',\n      },\n    },\n    {\n      path: 'emergency/detail',\n      component: NgxaReportsEmergencyDetailComponent,\n      data: {\n        code: '#EMERGENCY-REPORTS-PAGE',\n      },\n    },\n    {\n      path: 'fake',\n      component: NgxaReportsFakeListPageComponent,\n      data: {\n        code: '#FAKE-REPORTS-PAGE',\n      },\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NgxaCerReportsRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { NbCardModule, NbAlertModule, NbIconModule, NbDialogModule, NbWindowModule } from '@nebular/theme';\nimport { NgxaThemeModule } from '@xaphira/ngxa-theme';\nimport {\n  NgxaInputModule,\n  NgxaButtonModule,\n  NgxaBaseModule,\n  NgxaTableModule,\n  NgxaLabelModule,\n  NgxaCheckBoxModule,\n  NgxaSelectModule,\n} from '@xaphira/ngxa-common';\nimport { NgxaCerReportsComponent } from './ngxa-cer-reports.component';\nimport { NgxaCerReportsRoutingModule } from './ngxa-cer-reports-routing.module';\nimport { ReportsPanicService } from './services/reports-panic.service';\nimport { NgxaReportsEmergencyListPageComponent } from './emergency/list/ngxa-reports-emergency-list-page.component';\nimport { NgxaFakePromptComponent } from './emergency/detail/prompt/ngxa-fake-prompt.component';\nimport { NgxaReportsPreviewComponent } from './emergency/detail/preview/ngxa-reports-preview.component';\nimport {\n  NgxaReportsEmergencyDetailComponent,\n} from './emergency/detail/ngxa-reports-emergency-detail.component';\nimport { NgxaReportsFakeListPageComponent } from './fake/list/ngxa-reports-fake-list-page.component';\n\nconst components = [\n  NgxaCerReportsComponent,\n  NgxaReportsEmergencyListPageComponent,\n  NgxaReportsEmergencyDetailComponent,\n  NgxaFakePromptComponent,\n  NgxaReportsPreviewComponent,\n  NgxaReportsFakeListPageComponent,\n];\n\nconst modules = [\n  FormsModule,\n  ReactiveFormsModule,\n  NbCardModule,\n  NbAlertModule,\n  NbIconModule,\n  NbDialogModule.forChild(),\n  NbWindowModule.forChild(),\n  NgxaThemeModule,\n  NgxaInputModule,\n  NgxaCheckBoxModule,\n  NgxaButtonModule,\n  NgxaBaseModule,\n  NgxaSelectModule,\n  NgxDatatableModule,\n  NgxaTableModule,\n  NgxaLabelModule,\n  NgxaCerReportsRoutingModule,\n];\n\nconst providers = [\n  ReportsPanicService,\n];\n\nconst entry_components = [\n  NgxaFakePromptComponent,\n  NgxaReportsPreviewComponent,\n];\n\n@NgModule({\n  imports: [\n    ...modules,\n  ],\n  declarations: [\n    ...components,\n  ],\n  providers: [\n    ...providers,\n  ],\n  entryComponents: [\n    ...entry_components,\n  ],\n})\nexport class NgxaCerReportsModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'xa-cer-statistics',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class NgxaStatisticsComponent {\n}\n","import { Component, OnInit, OnDestroy, Injector } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { NbThemeService } from '@nebular/theme';\nimport { HttpFactoryService, HTTP_SERVICE, API, APIModel } from '@xaphira/shared';\n\n@Component({\n  selector: 'xa-cer-statistics-area',\n  styleUrls: ['./ngxa-cer-statistics-area-page.component.scss'],\n  templateUrl: './ngxa-cer-statistics-area-page.component.html',\n})\nexport class NgxaCerStatisticsAreaPageComponent implements OnInit, OnDestroy {\n\n  public options: any = {};\n  public data: any;\n  public dataSelect: any[];\n  public selected: any;\n  private destroy$: Subject<void> = new Subject<void>();\n  private http: HttpFactoryService;\n  private api: APIModel;\n  private themeSubscription: Subscription;\n  private axis: any[];\n  private legend: any[];\n  private series: any[];\n\n\n  constructor(injector: Injector, private theme: NbThemeService) {\n    this.http = injector.get(HTTP_SERVICE);\n    this.api = injector.get(API);\n  }\n\n  ngOnInit(): void {\n    const year: number = new Date().getFullYear();\n    const tempData: number[] = [];\n    for (let i: number = 3; i >= 0; i--) {\n      tempData.push(year - i);\n    }\n    this.dataSelect = tempData;\n    this.selected = year;\n    this.getStatistics();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.themeSubscription.unsubscribe();\n  }\n\n  private getStatistics(): void {\n    this.http.HTTP_AUTH(\n      this.api['panic']['statistics-area'],\n      null,\n      null,\n      null,\n      [this.selected]).subscribe((values: any) => {\n        this.axis = values['axis']['data'];\n        this.legend = values['legend']['data'];\n        this.series = [];\n        values['series'].forEach((series: any) => {\n          const dataSeries: any[] = [];\n          values['axis']['data'].forEach((axis: any) => {\n            dataSeries.push(series['data'][axis]);\n          });\n          this.series.push({\n            name: series['name'],\n            type: 'bar',\n            barWidth: '60%',\n            data: dataSeries,\n          });\n        });\n        this.buildChart();\n    });\n  }\n\n  private buildChart(): void {\n    this.themeSubscription = this.theme.getJsTheme().subscribe(config => {\n\n      const colors: any = config.variables;\n      const echarts: any = config.variables.echarts;\n\n      this.options = {\n        backgroundColor: echarts.bg,\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow',\n          },\n        },\n        legend: {\n          data: this.legend,\n          textStyle: {\n            color: echarts.textColor,\n          },\n        },\n        grid: {\n          left: '2%',\n          right: '3%',\n          bottom: '5%',\n          top: '15%',\n          containLabel: true,\n        },\n        xAxis: [\n          {\n            type: 'value',\n            axisLine: {\n              lineStyle: {\n                color: echarts.axisLineColor,\n              },\n            },\n            splitLine: {\n              lineStyle: {\n                color: echarts.splitLineColor,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n          },\n        ],\n        yAxis: [\n          {\n            type: 'category',\n            data: this.axis,\n            axisTick: {\n              alignWithLabel: true,\n            },\n            axisLine: {\n              lineStyle: {\n                color: echarts.axisLineColor,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n          },\n        ],\n        series: this.series,\n      };\n    });\n  }\n\n  public onSelectChange(data: any): void {\n    this.selected = data;\n    this.getStatistics();\n  }\n\n  private random() {\n    return Math.round(Math.random() * 100);\n  }\n\n}\n","import { Component, OnInit, OnDestroy, Injector } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { NbThemeService } from '@nebular/theme';\nimport { HttpFactoryService, HTTP_SERVICE, API, APIModel } from '@xaphira/shared';\n\n@Component({\n  selector: 'xa-cer-statistics-gender',\n  styleUrls: ['./ngxa-cer-statistics-gender-page.component.scss'],\n  templateUrl: './ngxa-cer-statistics-gender-page.component.html',\n})\nexport class NgxaCerStatisticsGenderPageComponent implements OnInit, OnDestroy {\n\n  public options: any = {};\n  public data: any;\n  public dataSelect: any[];\n  public selected: any;\n  private destroy$: Subject<void> = new Subject<void>();\n  private http: HttpFactoryService;\n  private api: APIModel;\n  private themeSubscription: Subscription;\n  private legend: any[];\n  private series: any[];\n  private echarts: any;\n\n  constructor(injector: Injector, private theme: NbThemeService) {\n    this.http = injector.get(HTTP_SERVICE);\n    this.api = injector.get(API);\n  }\n\n  ngOnInit(): void {\n    const year: number = new Date().getFullYear();\n    const tempData: number[] = [];\n    for (let i: number = 3; i >= 0; i--) {\n      tempData.push(year - i);\n    }\n    this.dataSelect = tempData;\n    this.selected = year;\n    this.getStatistics();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.themeSubscription.unsubscribe();\n  }\n\n  private getStatistics(): void {\n    this.buildChart();\n  }\n\n  private buildChart(): void {\n    this.themeSubscription = this.theme.getJsTheme().subscribe(config => {\n\n      const colors = config.variables;\n      this.echarts = config.variables.echarts;\n      \n      this.http.HTTP_AUTH(\n        this.api['panic']['statistics-gender'],\n        null,\n        null,\n        null,\n        [this.selected]).subscribe((values: any) => {\n          this.legend = values['legend']['data'];\n          this.series = [];\n          console.log(values['series']);\n          values['series'].forEach((series: any) => {\n            const dataSeries: any[] = [];\n            values['axis']['data'].forEach((axis: any) => {\n              dataSeries.push({\n                value: series['data'][axis],\n                name: axis,\n              });\n            });\n            this.series.push({\n              name: series['name'],\n              type: 'pie',\n              radius: '80%',\n              center: ['50%', '50%'],\n              data: dataSeries,\n              itemStyle: {\n                emphasis: {\n                  shadowBlur: 10,\n                  shadowOffsetX: 0,\n                  shadowColor: this.echarts.itemHoverShadowColor,\n                },\n              },\n              label: {\n                normal: {\n                  textStyle: {\n                    color: this.echarts.textColor,\n                  },\n                },\n              },\n              labelLine: {\n                normal: {\n                  lineStyle: {\n                    color: this.echarts.axisLineColor,\n                  },\n                },\n              },\n            });\n\n            this.options = {\n              backgroundColor: this.echarts.bg,\n              tooltip: {\n                trigger: 'item',\n                formatter: '{a} <br/>{b} : {c} ({d}%)',\n              },\n              legend: {\n                orient: 'vertical',\n                left: 'left',\n                data: this.legend,\n                textStyle: {\n                  color: this.echarts.textColor,\n                },\n              },\n              calculable: true,\n              series: this.series,\n            };\n          });\n      });\n    });\n  }\n\n  public onSelectChange(data: any): void {\n    this.selected = data;\n    this.getStatistics();\n  }\n\n}\n","import { Component, OnInit, OnDestroy, Inject, Injector } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { NbThemeService } from '@nebular/theme';\nimport { HttpFactoryService, HTTP_SERVICE, API, APIModel } from '@xaphira/shared';\n\n@Component({\n  selector: 'xa-cer-statistics-periode',\n  styleUrls: ['./ngxa-cer-statistics-periode-page.component.scss'],\n  templateUrl: './ngxa-cer-statistics-periode-page.component.html',\n})\nexport class NgxaCerStatisticsPeriodePageComponent implements OnInit, OnDestroy {\n\n  public options: any = {};\n  public data: any;\n  public dataSelect: any[];\n  public selected: any;\n  private destroy$: Subject<void> = new Subject<void>();\n  private http: HttpFactoryService;\n  private api: APIModel;\n  private themeSubscription: Subscription;\n  private axis: any[];\n  private legend: any[];\n  private series: any[];\n\n  constructor(injector: Injector, private theme: NbThemeService) {\n    this.http = injector.get(HTTP_SERVICE);\n    this.api = injector.get(API);\n  }\n\n  ngOnInit(): void {\n    const year: number = new Date().getFullYear();\n    const tempData: number[] = [];\n    for (let i: number = 3; i >= 0; i--) {\n      tempData.push(year - i);\n    }\n    this.dataSelect = tempData;\n    this.selected = year;\n    this.getStatistics();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.themeSubscription.unsubscribe();\n  }\n\n  private getStatistics(): void {\n    this.http.HTTP_AUTH(\n      this.api['panic']['statistics-periode'],\n      null,\n      null,\n      null,\n      [this.selected]).subscribe((values: any) => {\n        this.axis = values['axis']['data'];\n        this.legend = values['legend']['data'];\n        this.series = [];\n        values['series'].forEach((series: any) => {\n          const dataSeries: any[] = [];\n          values['axis']['data'].forEach((axis: any) => {\n            dataSeries.push(series['data'][axis]);\n          });\n          this.series.push({\n            name: series['name'],\n            type: 'line',\n            smooth: true,\n            data: dataSeries,\n          });\n        });\n        this.buildChart();\n    });\n  }\n\n  private buildChart(): void {\n    this.themeSubscription = this.theme.getJsTheme().subscribe(config => {\n\n      const colors: any = config.variables;\n      const echarts: any = config.variables.echarts;\n\n      this.options = {\n        backgroundColor: echarts.bg,\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n          },\n        },\n        legend: {\n          data: this.legend,\n          textStyle: {\n            color: echarts.textColor,\n          },\n        },\n        grid: {\n          left: '2%',\n          right: '3%',\n          bottom: '5%',\n          containLabel: true,\n        },\n        xAxis: [\n          {\n            type: 'category',\n            data: this.axis,\n            axisTick: {\n              alignWithLabel: true,\n            },\n            axisLine: {\n              lineStyle: {\n                color: echarts.axisLineColor,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n          },\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            axisLine: {\n              lineStyle: {\n                color: echarts.axisLineColor,\n              },\n            },\n            splitLine: {\n              lineStyle: {\n                color: echarts.splitLineColor,\n              },\n            },\n            axisLabel: {\n              textStyle: {\n                color: echarts.textColor,\n              },\n            },\n          },\n        ],\n        series: this.series,\n      };\n    });\n  }\n\n  public onSelectChange(data: any): void {\n    this.selected = data;\n    this.getStatistics();\n  }\n\n  private random() {\n    return Math.round(Math.random() * 100);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuardChildService } from '@xaphira/ngxa-auth';\nimport { NgxaStatisticsComponent } from './ngxa-statistics.component';\nimport { NgxaCerStatisticsAreaPageComponent } from './area/ngxa-cer-statistics-area-page.component';\nimport { NgxaCerStatisticsGenderPageComponent } from './gender/ngxa-cer-statistics-gender-page.component';\nimport { NgxaCerStatisticsPeriodePageComponent } from './periode/ngxa-cer-statistics-periode-page.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: NgxaStatisticsComponent,\n  canActivateChild: [AuthGuardChildService],\n  children: [\n    {\n      path: 'area',\n      component: NgxaCerStatisticsAreaPageComponent,\n      data: {\n        code: '#STATISTICS-AREA-PAGE',\n      },\n    },\n    {\n      path: 'gender',\n      component: NgxaCerStatisticsGenderPageComponent,\n      data: {\n        code: '#STATISTICS-GENDER-PAGE',\n      },\n    },\n    {\n      path: 'periode',\n      component: NgxaCerStatisticsPeriodePageComponent,\n      data: {\n        code: '#STATISTICS-PERIODE-PAGE',\n      },\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NgxaCerStatisticsRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NbCardModule } from '@nebular/theme';\nimport { NgxaChartsModule, NgxaBaseModule } from '@xaphira/ngxa-common';\nimport { NgxaThemeModule } from '@xaphira/ngxa-theme';\nimport { NgxaCerStatisticsRoutingModule } from './ngxa-cer-statistics-routing.module';\nimport { NgxaStatisticsComponent } from './ngxa-statistics.component';\nimport { NgxaCerStatisticsAreaPageComponent } from './area/ngxa-cer-statistics-area-page.component';\nimport { NgxaCerStatisticsGenderPageComponent } from './gender/ngxa-cer-statistics-gender-page.component';\nimport { NgxaCerStatisticsPeriodePageComponent } from './periode/ngxa-cer-statistics-periode-page.component';\n\nconst components = [\n  NgxaStatisticsComponent,\n  NgxaCerStatisticsAreaPageComponent,\n  NgxaCerStatisticsGenderPageComponent,\n  NgxaCerStatisticsPeriodePageComponent,\n];\n\nconst modules = [\n  FormsModule,\n  ReactiveFormsModule,\n  NbCardModule,\n  NgxaThemeModule,\n  NgxaBaseModule,\n  NgxaChartsModule,\n  NgxaCerStatisticsRoutingModule,\n];\n\nconst providers = [\n];\n\nconst entryComponents = [\n];\n\n@NgModule({\n  imports: [\n    ...modules,\n  ],\n  declarations: [\n    ...components,\n  ],\n  providers: [\n    ...providers,\n  ],\n  entryComponents: [\n    ...entryComponents,\n  ],\n})\nexport class NgxaCerStatisticsModule { }\n"],"names":["tslib_1.__extends","routes","components","modules","providers","entryComponents"],"mappings":"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"}