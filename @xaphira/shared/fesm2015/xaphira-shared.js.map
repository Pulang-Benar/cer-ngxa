{"version":3,"file":"xaphira-shared.js","sources":["ng://@xaphira/shared/lib/providers/http.provider.ts","ng://@xaphira/shared/lib/services/http-abstract.service.ts","ng://@xaphira/shared/lib/models/http-base.model.ts","ng://@xaphira/shared/lib/models/response-code.model.ts","ng://@xaphira/shared/lib/models/security-resource.model.ts","ng://@xaphira/shared/lib/models/environment.model.ts","ng://@xaphira/shared/lib/models/signature-header.model.ts","ng://@xaphira/shared/lib/models/user-info.model.ts","ng://@xaphira/shared/lib/services/http-common.service.ts","ng://@xaphira/shared/lib/shared.module.ts","ng://@xaphira/shared/lib/providers/oauth.provider.ts","ng://@xaphira/shared/lib/providers/api.provider.ts","ng://@xaphira/shared/lib/providers/environment.provider.ts","ng://@xaphira/shared/lib/providers/storage.provider.ts","ng://@xaphira/shared/lib/providers/cer/panic.provider.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { HttpFactoryService } from '../services/http-factory.service';\n\nexport const HTTP_SERVICE: InjectionToken<HttpFactoryService> =\nnew InjectionToken<HttpFactoryService>('Http Service');\n","import { Observable } from 'rxjs/Rx';\nimport { HttpBaseModel } from '../models/http-base.model';\nimport { HttpFactoryService } from './http-factory.service';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\n\nexport abstract class HttpAbstractService implements HttpFactoryService {\n\n  public abstract HTTP_AUTH(\n    api: HttpBaseModel,\n    body?: any,\n    headers?: HttpHeaders,\n    params?: HttpParams,\n    pathVariable?: string[],\n    responseType?: any): Observable<any>;\n  public abstract HTTP_BASE(\n    api: HttpBaseModel,\n    body?: any,\n    headers?: HttpHeaders,\n    params?: HttpParams,\n    pathVariable?: string[],\n    responseType?: any): Observable<any>;\n  public abstract GET(\n    url: string,\n    headers?: HttpHeaders,\n    params?: HttpParams,\n    responseType?: any): Observable<any>;\n  public abstract POST(\n    url: string,\n    body: any,\n    headers?: HttpHeaders,\n    params?: HttpParams,\n    responseType?: any): Observable<any>;\n  public abstract PUT(url: string, body: any, headers?: HttpHeaders, params?: HttpParams): Observable<any>;\n  public abstract DELETE(url: string, headers?: HttpHeaders, params?: HttpParams): Observable<any>;\n\n  public API(api: HttpBaseModel, pathVariable?: string[]): string {\n    let url: string = api.server.protocol +\n                    '://' +\n                    api.server.host +\n                    ((api.server.port) ? ':' + api.server.port : '') +\n                    api.path;\n    if (pathVariable)\n      pathVariable.forEach(path => {\n        url = url + '/' + path;\n      });\n    return url;\n  }\n\n}\n","export interface APIModel {\n    [name: string]: {\n        [name: string]: HttpBaseModel,\n    };\n}\n\nexport interface HttpBaseModel {\n    server: HostModel;\n    path?: string;\n    method?: HttpMethod;\n    file?: FileModel;\n}\n\nexport interface FileModel {\n    filename: string;\n    extension: string;\n}\n\nexport enum HttpMethod {\n    POST = 'POST',\n    GET = 'GET',\n    PUT = 'PUT',\n    DELETE = 'DELETE',\n}\n\nexport class HostModel {\n    protocol?: string = 'https';\n    host: string;\n    port?: number | null;\n}\n\nexport interface ApiBaseResponse {\n    respStatusCode: string;\n    respStatusMessage: {\n        [name: string]: string,\n    };\n}\n","export enum ResponseCode {\n    ERR_XXAKEY = 'ERR_XXAKEY',\n    ERR_XXATIMESTAMP = 'ERR_XXATIMESTAMP',\n    ERR_XXASIGNATURE = 'ERR_XXASIGNATURE',\n    ERR_UNAUTHORIZED = 'ERR_UNAUTHORIZED',\n\n    ERR_SYS0001 = 'ERR_SYS0001',\n    ERR_SYS0500 = 'ERR_SYS0500',\n    ERR_SYS0404 = 'ERR_SYS0404',\n    ERR_SYS0501 = 'ERR_SYS0501',\n    ERR_SYS0502 = 'ERR_SYS0502',\n    ERR_SCR0001 = 'ERR_SCR0001',\n    ERR_SCR0002 = 'ERR_SCR0002',\n    ERR_SCR0003 = 'ERR_SCR0003',\n    ERR_SCR0004 = 'ERR_SCR0004',\n    ERR_SCR0005 = 'ERR_SCR0005',\n    ERR_SCR0006 = 'ERR_SCR0006',\n    ERR_SCR0007A = 'ERR_SCR0007A',\n    ERR_SCR0007B = 'ERR_SCR0007B',\n    ERR_SCR0008 = 'ERR_SCR0008',\n\n    OK_DEFAULT = 'OK_DEFAULT',\n    OK_UPDATED = 'OK_UPDATED',\n    OK_SCR001 = 'OK_SCR001',\n    OK_SCR002 = 'OK_SCR002',\n    OK_SCR003 = 'OK_SCR003',\n    OK_SCR004 = 'OK_SCR004',\n    OK_SCR005 = 'OK_SCR005',\n    OK_SCR006 = 'OK_SCR006',\n    OK_SCR007 = 'OK_SCR007',\n    OK_SCR008 = 'OK_SCR008',\n    OK_SCR009 = 'OK_SCR009',\n    OK_SCR010 = 'OK_SCR010',\n    OK_SCR011 = 'OK_SCR011',\n}\n","export interface SecurityResourceModel {\n    client_id: string;\n    client_secret: string;\n    grant_type: string;\n    private_key?: string;\n    aes_key?: string;\n    session_idle?: number;\n    session_timeout?: number;\n    signature?: boolean;\n    vapid?: string;\n}\n\nexport const oauthInfo = {\n    access_token: 'access_token',\n    refresh_token: 'refresh_token',\n    token_type: 'token_type',\n    public_key: 'xrkey',\n    expires_in: 'expires_in',\n    authority: 'authority',\n    image: 'image',\n    email: 'email',\n    menus: 'menus',\n    extras: 'extras',\n    server_date: 'server_date',\n    locale: 'locale',\n    theme: 'theme',\n    name: 'name',\n};\n\nexport enum TypeDataOauth {\n    OAUTH = 'oauth',\n    PROFILE = 'profile',\n    SETTINGS = 'settings',\n    LOCALSTORAGE = 'localstorage',\n}\n\nexport const oauthInfoModels: OauthInfoModel[] = [\n    { key: oauthInfo.access_token, enc: true, type: TypeDataOauth.OAUTH, string: true },\n    { key: oauthInfo.refresh_token, enc: true, type: TypeDataOauth.OAUTH, string: true },\n    { key: oauthInfo.token_type, enc: true, type: TypeDataOauth.OAUTH, string: true },\n    { key: oauthInfo.public_key, enc: true, type: TypeDataOauth.OAUTH, string: true },\n    { key: oauthInfo.expires_in, enc: true, type: TypeDataOauth.OAUTH, string: false },\n    { key: oauthInfo.authority, enc: true, type: TypeDataOauth.OAUTH, string: false },\n    { key: oauthInfo.menus, enc: true, type: TypeDataOauth.OAUTH, string: false },\n    { key: oauthInfo.extras, enc: true, type: TypeDataOauth.OAUTH, string: false },\n    { key: oauthInfo.name, enc: false, type: TypeDataOauth.PROFILE, string: true },\n    { key: oauthInfo.email, enc: false, type: TypeDataOauth.PROFILE, string: true },\n    { key: oauthInfo.image, enc: false, type: TypeDataOauth.PROFILE, string: true },\n    { key: oauthInfo.locale, enc: false, type: TypeDataOauth.SETTINGS, string: true },\n    { key: oauthInfo.theme, enc: false, type: TypeDataOauth.SETTINGS, string: true },\n    { key: oauthInfo.server_date, enc: false, type: TypeDataOauth.SETTINGS, string: true },\n];\n\nexport interface OauthInfoModel {\n    key: string;\n    enc: boolean;\n    type: TypeDataOauth;\n    string: boolean;\n}\n","export class Environment {\n    production: boolean = true;\n    locale: string = 'en-US';\n    basePath: string = '/';\n    host: {\n        [name: string]: Server,\n    };\n}\n\nexport class Server {\n    protocol?: string = 'http';\n    host: string;\n    port?: string;\n}\n","export const signatureHeader = {\n    authorization: 'Authorization',\n    signature: 'X-XA-Signature',\n    timestamp: 'X-XA-Timestamp',\n    key: 'X-XA-Key',\n    mark: 'X-XA-Mark',\n};\n","import { Observable } from 'rxjs';\n\nexport interface User {\n  name: string;\n  picture: string;\n}\n\nexport abstract class UserInfo {\n  abstract loadPhotoUser(): void;\n  abstract updatePhotoUser(file: File, checksum: string): Observable<User>;\n  abstract getUser(): Observable<User>;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs/Rx';\nimport { HttpAbstractService } from './http-abstract.service';\nimport { HttpBaseModel, HttpMethod } from '../models/http-base.model';\nimport { signatureHeader } from '../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpCommonService extends HttpAbstractService {\n\n  constructor(protected http: HttpClient) {\n    super();\n  }\n\n  public HTTP_AUTH(api: HttpBaseModel,\n                    body?: any,\n                    headers?: HttpHeaders,\n                    params?: HttpParams,\n                    pathVariable?: string[],\n                    responseType?: 'json' | 'arraybuffer'): Observable<any> {\n    if (headers) {\n      headers = headers.append(signatureHeader.mark, 'true');\n    } else headers = new HttpHeaders().append(signatureHeader.mark, 'true');\n    responseType = responseType ? responseType : 'json';\n    return this.HTTP_BASE(api, body, headers, params, pathVariable, responseType);\n  }\n\n  public HTTP_BASE(api: HttpBaseModel,\n                    body?: any,\n                    headers?: HttpHeaders,\n                    params?: HttpParams,\n                    pathVariable?: string[],\n                    responseType?: 'json' | 'arraybuffer'): Observable<any> {\n    let response: Observable<any> = null;\n    responseType = responseType ? responseType : 'json';\n    switch (api.method) {\n      case HttpMethod.POST:\n        response = this.POST(this.API(api, pathVariable), body, headers, params, responseType);\n        break;\n      case HttpMethod.PUT:\n        response = this.PUT(this.API(api, pathVariable), body, headers, params);\n        break;\n      case HttpMethod.DELETE:\n        response = this.DELETE(this.API(api, pathVariable), headers, params);\n        break;\n      default:\n        response = this.GET(this.API(api, pathVariable), headers, params, responseType);\n        break;\n    }\n    return response;\n  }\n\n  public GET(url: string, headers?: HttpHeaders, params?: HttpParams, responseType?: any): Observable<any> {\n    return this.http.get(url, {headers: headers, params: params, responseType: responseType});\n  }\n\n  public POST(url: string, body: any, headers?: HttpHeaders, params?: HttpParams, responseType?: any):\n    Observable<any> {\n    return this.http.post(url, body, {headers: headers, params: params, responseType: responseType});\n  }\n\n  public PUT(url: string, body: any, headers?: HttpHeaders, params?: HttpParams): Observable<any> {\n    return this.http.put(url, body, {headers: headers, params: params});\n  }\n\n  public DELETE(url: string, headers?: HttpHeaders, params?: HttpParams): Observable<any> {\n    return this.http.delete(url, {headers: headers, params: params});\n  }\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_SERVICE } from './providers/http.provider';\nimport { HttpCommonService } from './services/http-common.service';\n\nexport const SHARED_PROVIDERS = [\n  { provide: HTTP_SERVICE, useClass: HttpCommonService},\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  exports: [],\n  declarations: [],\n})\nexport class SharedModule {\n\n  static forRoot(): ModuleWithProviders {\n    return <ModuleWithProviders>{\n      ngModule: SharedModule,\n      providers: [\n        ...SHARED_PROVIDERS,\n      ],\n    };\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { SecurityResourceModel } from '../models/security-resource.model';\nimport { UserInfo } from '../models';\n\nexport const OAUTH_INFO: InjectionToken<SecurityResourceModel> =\nnew InjectionToken<SecurityResourceModel>('OAUTH INFO Resource');\n\nexport const USER_INFO: InjectionToken<UserInfo> =\nnew InjectionToken<UserInfo>('USER INFO Resource');\n","import { InjectionToken } from '@angular/core';\nimport { APIModel } from '../models';\n\nexport const API: InjectionToken<APIModel> =\nnew InjectionToken<APIModel>('API');\n","import { InjectionToken } from '@angular/core';\nimport { Environment } from '../models';\n\nexport const ENVIRONMENT: InjectionToken<Environment> =\nnew InjectionToken<Environment>('Environment Config');\n","import { InjectionToken } from '@angular/core';\nimport { IndexedDBFactoryService } from '../services/indexeddb-factory.service';\nimport { IndexedDBEncFactoryService } from '../services/indexeddb-enc-factory.service';\n\nexport const AUTH_INDEXED_DB: InjectionToken<IndexedDBEncFactoryService> =\nnew InjectionToken<IndexedDBEncFactoryService>('Auth IndexedDB Resource');\n\nexport const PROFILE_INDEXED_DB: InjectionToken<IndexedDBFactoryService> =\nnew InjectionToken<IndexedDBFactoryService>('Profile IndexedDB Resource');\n\nexport const SETTINGS_INDEXED_DB: InjectionToken<IndexedDBFactoryService> =\nnew InjectionToken<IndexedDBFactoryService>('Settings IndexedDB Resource');\n\nexport const PANIC_INDEXED_DB: InjectionToken<IndexedDBFactoryService> =\nnew InjectionToken<IndexedDBFactoryService>('Panic IndexedDB Resource');\n","import { InjectionToken } from '@angular/core';\nimport { PanicFactoryService } from '../../services/cer/panic-factory.service';\n\nexport const PANIC: InjectionToken<PanicFactoryService> =\nnew InjectionToken<PanicFactoryService>('Panic Resource');\n"],"names":[],"mappings":"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"}